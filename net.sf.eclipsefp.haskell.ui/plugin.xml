<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>
   <extension-point id="CabalChangeListener" name="%extPtCabalChange_name" schema="schema/CabalChangeListener.exsd"/>
   <!-- [Wizards] project and module creation -->
   <extension point="org.eclipse.ui.newWizards">
      <wizard
            name="%newProjectWizard_name"
            icon="icons/etool16/newhprj_wiz.gif"
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.NewHaskellProjectWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            project="true"
            id="net.sf.eclipsefp.haskell.ui.wizards.NewHaskellProjectWizard">
         <description>
            %newProjectWizard_desc
         </description>
      </wizard>
      <wizard
            name="%newModuleWizard_name"
            icon="icons/obj16/module.gif"
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.NewModuleWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            project="false"
            id="net.sf.eclipsefp.haskell.ui.wizards.NewModuleWizard">
         <description>
            %newModuleWizard_desc
         </description>
      </wizard>
   </extension>
   <extension point="org.eclipse.ui.importWizards">
     <wizard
           category="net.sf.eclipsefp.haskell.ui.importWizardCategory"
           class="net.sf.eclipsefp.haskell.ui.internal.wizards.CabalPackageImportWizard"
           icon="icons/etool16/impcprj_wiz.gif"
           id="net.sf.eclipsefp.haskell.ui.internal.wizards.CabalPackageImportWizard"
           name="%importCabalPackageWizard_name">
        <description>
           %importCabalPackageWizard_desc
        </description>
     </wizard>
   </extension>
   
   <!-- [Editors] Haskell code editor -->
   <extension
         point="org.eclipse.ui.editors">
      <editor
            name="%haskellEditor_name"
            extensions="hs,lhs"
            icon="icons/obj16/hsfile_obj.gif"
            class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor"
            contributorClass="net.sf.eclipsefp.haskell.ui.actions.HaskellEditorActionContributor"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor">
        <contentTypeBinding contentTypeId="net.sf.eclipsefp.haskell.contenttypes.haskell" />
        <contentTypeBinding contentTypeId="net.sf.eclipsefp.haskell.contenttypes.literateHaskell" />
      </editor>
   </extension>
   <extension
         point="org.eclipse.ui.editors.documentProviders">
      <provider
            extensions="hs,lhs"
            class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellDocumentProvider"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellDocumentProvider">
      </provider>
   </extension>

   <!-- [Editors] Cabal editor -->
   <extension point="org.eclipse.ui.editors">
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalFormEditor"
            contributorClass="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalEditorContributor"
            default="true"
            extensions="cabal"
            icon="$nl$/icons/eview16/cabal.gif"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalFormEditor"
            name="%cabalEditor_name"/>
   </extension>
   <extension
         point="org.eclipse.ui.editors.documentProviders">
      <provider
            extensions="cabal"
            class="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalDocProvider"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalDocProvider">
      </provider>
   </extension>
   <extension
         point="org.eclipse.ui.editors.templates">
      <contextType
            class="org.eclipse.jface.text.templates.TemplateContextType"
            name="%templateContext_name"
            id="cabalPackageDescriptionTemplates"/>
      <include file="templates/cabal-templates.xml"/>
   </extension>

   <extension
         point="org.eclipse.ui.ide.projectNatureImages">
      <image
            icon="icons/ovr16/haskell_ovr.gif"
            natureId="net.sf.eclipsefp.haskell.core.project.HaskellNature"
            id="net.sf.eclipsefp.haskell.core.project.haskellNatureImage">
      </image>
   </extension>
   <extension
         point="org.eclipse.ui.decorators">
      <decorator
            adaptable="true"
            label="%haskellDecorator_name"
            class="net.sf.eclipsefp.haskell.ui.decorators.ProjectFoldersDecorator"
            state="true"
            id="net.sf.eclipsefp.haskell.ui.decorators.ProjectFoldersDecorator">
            <enablement>
              <objectClass name="org.eclipse.core.resources.IFolder"/> 
            </enablement>
         <description>
            %haskellDecorator_desc
         </description>
      </decorator>
      <decorator
            label="%haskellDecorator_name"
            lightweight="true"
            class="net.sf.eclipsefp.haskell.ui.decorators.ProblemsLabelDecorator"
            state="true"
            id="net.sf.eclipsefp.haskell.ui.decorators.ProblemsLabelDecorator">
            <enablement>
              <objectClass name="org.eclipse.core.resources.IResource"/> 
            </enablement>
         <description>
            %haskellDecorator_desc
         </description>
      </decorator>
   </extension>
   <extension
         point="org.eclipse.ui.perspectives">
      <perspective
            name="%haskellPerspective_name"
            icon="icons/etool16/haskell_misc.gif"
            class="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            id="net.sf.eclipsefp.haskell.ui.HaskellPerspective">
      </perspective>
   </extension>
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            name="%haskellPP_name"
            class="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            id="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP">
      </page>
      <page
            name="%implementationsPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.hsimpls.InstalledImplementationsPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.hsimpls.InstalledImplementationsPP">
      </page>
      <page
            name="%editorPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP">
      </page>
       <page
            name="%editorPP_syntax_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.SyntaxPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.SyntaxPP">
      </page>  
       <page
            name="%editorPP_typing_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.TypingPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.TypingPP">
      </page> 
      <page
            name="%editorPP_annotation_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AnnotationsPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AnnotationsPP">
      </page>      
      
      <page
            name="%projectWizardPP"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.NewHaskellProjectPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.NewHaskellProjectPP">
      </page>
      <!--page
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.BuildConsolePP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.BuildConsolePP"
            name="%buildConsolePP_name">
      </page-->
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP"
            name="%scionPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP">
      </page>
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.DebugPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.DebugPP"
            name="%debugPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP">
      </page>
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.SearchPathsPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.SearchPathsPP"
            name="%searchPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP">
      </page>
      <page
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.templates.HSCodeTemplatePreferences"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.templates.HSCodeTemplatePreferences"
            name="%HaskellSourceTmplatesPP.name">
      </page>
   </extension>
   <extension
         point="org.eclipse.ui.propertyPages">
      <page
            name="%projectLibrariesPP_name"
            class="net.sf.eclipsefp.haskell.ui.properties.ImportLibrariesPP"
            id="net.sf.eclipsefp.haskell.ui.properties.ImportLibrariesPP">
         <filter
               name="nature"
               value="net.sf.eclipsefp.haskell.core.project.HaskellNature">
         </filter>
         <filter
               name="open"
               value="true">
         </filter>
         <enabledWhen>
            <adapt type="org.eclipse.core.resources.IProject" />
         </enabledWhen>
      </page>

      <page
            name="%fileExposeModulesPP_name"
            class="net.sf.eclipsefp.haskell.ui.properties.ModuleInclusionPP"
            id="net.sf.eclipsefp.haskell.ui.properties.ModuleInclusionPP"
            nameFilter="*.hs">
          <enabledWhen>
            <adapt type="org.eclipse.core.resources.IFile" />
         </enabledWhen>
      </page>
       <page
            name="%fileExposeModulesPP_name"
            class="net.sf.eclipsefp.haskell.ui.properties.ModuleInclusionPP"
            id="net.sf.eclipsefp.haskell.ui.properties.ModuleInclusionPP_litt"
            nameFilter="*.lhs">
          <enabledWhen>
            <adapt type="org.eclipse.core.resources.IFile" />
         </enabledWhen>
      </page>
   </extension>
   
  
  <extension
         point="org.eclipse.ui.commands">
      <category
            description="%haskellEditorCategory_desc"
            name="%haskellEditorCategory_name"
            id="net.sf.eclipsefp.haskell.ui.category.source"/>
      <command
            description="%firstCharCommand_desc"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%firstCharCommand_name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.firstChar"/>
      <command
            description="%CommentAction.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%CommentAction.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.comment"/>
      <command
            description="%UncommentAction.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%UncommentAction.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment"/>
      <command
            description="%openDefinitionCommand_desc"
            categoryId="org.eclipse.ui.category.navigate"
            name="%openDefinitionCommand_name"
            id="net.sf.eclipsefp.ui.commands.navigate.openDefinition"/>
      <command
            description="%HaddockDocumentationAction.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%HaddockDocumentationAction.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_documentation"/>
      <command
            description="%HaddockDocumentFollowingAction.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%HaddockDocumentFollowingAction.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_following"/>
   </extension>
   <extension
         point="org.eclipse.ui.menus">
      <menuContribution
            locationURI="menu:navigate?after=open.ext">
         <command
               commandId="net.sf.eclipsefp.ui.commands.navigate.openDefinition">
            <visibleWhen checkEnabled="true"/>
         </command>
      </menuContribution>
      <menuContribution
            locationURI="popup:#HaskellEditorContext?after=group.open">
         <command
               commandId="net.sf.eclipsefp.ui.commands.navigate.openDefinition">
            <visibleWhen checkEnabled="true"/>
         </command>
      </menuContribution>
   </extension>
   <extension
         point="org.eclipse.ui.contexts">
      <context
            name="%haskellEditorContext_name"
            description="%haskellEditorContext_desc"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context"
            parentId="org.eclipse.ui.contexts.window"/>
   </extension>
   <extension
         point="org.eclipse.ui.bindings">
         <!-- keys for Line Comment -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="M1+7"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.comment" />
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              platform="carbon"
              sequence="M1+/"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.comment" />
         <!-- keys for Line Uncomment -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="M1+M2+7"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment" />
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              platform="carbon"
              sequence="M1+M2+/"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment" />
         <!-- keys for Haddock documentation -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="M1+M2+D F"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_following" />
         <!-- keys for navigation -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              commandId="net.sf.eclipsefp.ui.commands.navigate.openDefinition"
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context"
              sequence="F3"/>
         <!-- other keys -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.firstChar"
              sequence="Home"/>
   </extension>
   <extension
         point="org.eclipse.ui.handlers">
      <!-- handler for the Open Definition action when invoked from the HaskellEditor -->
      <handler
            class="net.sf.eclipsefp.haskell.ui.handlers.OpenDefinitionHandler"
            commandId="net.sf.eclipsefp.ui.commands.navigate.openDefinition">
         <activeWhen>
            <reference
                  definitionId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.active">
            </reference>
         </activeWhen>
      </handler>
   </extension>
   <extension
         point="org.eclipse.core.expressions.definitions">
      <!-- expression that is true when the HaskellEditor is the active part -->
      <definition
            id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.active">
         <with variable="activePartId">
            <equals value="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor"/>
         </with>
      </definition>
   </extension>
   <extension
         point="org.eclipse.ui.editorActions">
      <editorContribution
            targetID="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor"
            id="net.sf.eclipsefp.haskell.ui.editor.editorContribution">
         <action
               label="%firstCharAction_label"
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.firstChar"
               class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.actions.FirstCharAction"
               id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.actions.FirstCharAction"/>
      </editorContribution>
   </extension>
   <extension point="org.eclipse.ui.editors.annotationTypes">
      <type name="net.sf.eclipsefp.haskell.ui.occurrences" />
   </extension>
   <extension point="org.eclipse.ui.editors.markerAnnotationSpecification">
      <specification
            annotationType="net.sf.eclipsefp.haskell.ui.occurrences"
            label="%haskellOccurrence_label"
            icon="icons/obj16/searchm_obj.gif"
            textPreferenceKey="occurrenceIndication"
            textPreferenceValue="false"
            highlightPreferenceKey="occurrenceHighlighting"
            highlightPreferenceValue="true"
            contributesToHeader="false"
            overviewRulerPreferenceKey="occurrenceIndicationInOverviewRuler"
            overviewRulerPreferenceValue="true"
            verticalRulerPreferenceKey="occurrenceIndicationInVerticalRuler"
            verticalRulerPreferenceValue="false"
            colorPreferenceKey="occurrenceIndicationColor"
            colorPreferenceValue="212,212,212"
            presentationLayer="4"
            showInNextPrevDropdownToolbarActionKey="showOccurrenceInNextPrevDropdownToolbarAction"
            showInNextPrevDropdownToolbarAction="true"
            isGoToNextNavigationTargetKey="isOccurrenceGoToNextNavigationTarget"
            isGoToNextNavigationTarget="false"
            isGoToPreviousNavigationTargetKey="isOccurrenceGoToPreviousNavigationTarget"
            isGoToPreviousNavigationTarget="false">
      </specification>
   </extension>   
   
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="net.sf.eclipsefp.haskell.ui.HaskellUIPreferenceInitializer">
      </initializer>
      <initializer
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.PreferenceInitializer">
      </initializer>
   </extension>

   <!-- some common categories for eclipsefp subprojects to dock on -->
   <extension point="org.eclipse.ui.newWizards">
      <category name="%newWizardCategory_name"
                id="net.sf.eclipsefp.haskell.ui.newWizardCategory" />
   </extension>
   <extension point="org.eclipse.ui.exportWizards">
      <category name="%exportWizardCategory_name"
                id="net.sf.eclipsefp.haskell.ui.exportWizardCategory" />
   </extension>
   <extension point="org.eclipse.ui.importWizards">
      <category name="%importWizardCategory_name"
                id="net.sf.eclipsefp.haskell.ui.importWizardCategory" />
   </extension>
   <extension point="org.eclipse.ui.cheatsheets.cheatSheetContent">
      <category name="Haskell"
                id="net.sf.eclipsefp.haskell.ui.haskellCheatSheets"/>
   </extension>

   
  <!-- Editor context menu: Coding and Refactoring actions-->

  <extension point="org.eclipse.ui.popupMenus">
    <viewerContribution targetID="#HaskellEditorContext"
                        id="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions">
      <menu id="refactor"
            label="%ctxMenu_refactor_label"
            path="group.edit">
         <separator name="codingGroup" />
      </menu>
      <action label="%refPF_label"
              class="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions.MakePointFree" 
              menubarPath="refactor/codingGroup"
              id="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions.MakePointFree"/>
      <action label="%refRename_label"
              class="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions.Rename" 
              menubarPath="refactor/codingGroup"
              id="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions.Rename"/>
      <action label="%optimizeImports_name"
              class="net.sf.eclipsefp.haskell.ui.internal.actions.OptimizeImports" 
              menubarPath="source/organize"
              id="net.sf.eclipsefp.haskell.ui.internal.actions.OptimizeImports"/>
    </viewerContribution>
    <objectContribution
          id="net.sf.eclipsefp.haskell.ui.contribution1"
          objectClass="org.eclipse.core.resources.IProject">
       <action
             class="net.sf.eclipsefp.haskell.ui.actions.CabalInstallAction"
             enablesFor="1"
             id="net.sf.eclipsefp.haskell.ui.newAction"
             label="%cabalInstallWizard.name">
       </action>
        <enablement>
	      <adapt type="org.eclipse.core.resources.IProject">
	        <test property="org.eclipse.core.resources.projectNature" 
	              value="net.sf.eclipsefp.haskell.core.project.HaskellNature"/>
	      </adapt>
	
      </enablement>
    </objectContribution>
  </extension>
  
  <!-- [Views] Project Explorer -->
  
  <extension point="org.eclipse.ui.navigator.viewer">
    <viewerContentBinding viewerId="org.eclipse.ui.navigator.ProjectExplorer">
      <includes>
        <contentExtension pattern="net.sf.eclipsefp.haskell.ui.haskellContent" />
        <contentExtension pattern="net.sf.eclipsefp.haskell.ui.internal.views.filters.*" />	
      </includes>
    </viewerContentBinding>
    <!--viewerActionBinding
         viewerId="org.eclipse.ui.navigator.ProjectExplorer"
         >
      <includes>
      	<actionExtension pattern="org.eclipse.ui.navigator.resources.OpenActions" />
         <actionExtension 
               pattern="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.OpenActionProvider"
               >
         </actionExtension>
      </includes>
   </viewerActionBinding-->
  </extension>
  
  <extension point="org.eclipse.ui.navigator.navigatorContent">
    <navigatorContent
      name="%navigatorContent_name"
      icon="$nl$/icons/etool16/haskell_misc.gif"
      activeByDefault="true"
      contentProvider="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.HaskellResourceExtensionCP"
      labelProvider="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.HaskellResourceExtensionLP"   
      id="net.sf.eclipsefp.haskell.ui.haskellContent"
      priority="high">
      <triggerPoints>
        <or>
          <adapt type="org.eclipse.core.resources.IProject">
            <test property="org.eclipse.core.resources.projectNature" 
                  value="net.sf.eclipsefp.haskell.core.project.HaskellNature"/>
          </adapt>
          <instanceof value="org.eclipse.core.resources.IWorkspaceRoot" /> 
          <instanceof value="org.eclipse.core.resources.IProject" />  
          <instanceof value="org.eclipse.core.resources.IFolder" /> 
          <instanceof value="org.eclipse.core.resources.IFile" /> 
          <instanceof value="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.ProjectExplorerOutlineDef" />  
        </or>
      </triggerPoints>
      <possibleChildren>
        <or>         
          <instanceof value="org.eclipse.core.resources.IWorkspaceRoot" /> 
          <instanceof value="org.eclipse.core.resources.IProject" /> 
          <instanceof value="org.eclipse.core.resources.IResource" /> 
          <instanceof value="org.eclipse.core.resources.IFolder" />
          <instanceof value="org.eclipse.core.resources.IFile" />
          <instanceof value="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.ProjectExplorerOutlineDef" />  
        </or>
      </possibleChildren>
       <actionProvider
            class="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.OpenActionProvider"
            id="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.OpenActionProvider"
            ><!-- overrides="org.eclipse.ui.navigator.resources.OpenActions"-->
          <enablement>
          		<instanceof value="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.ProjectExplorerOutlineDef"/>
             	
          </enablement>
        </actionProvider>
      
    </navigatorContent>
    <!--commonFilter
        activeByDefault="false"
        class="net.sf.eclipsefp.haskell.ui.internal.views.common.ProjectExecutableFilter"
        name="%projectExecutableFilter_name"
        description="%projectExecutableFilter_desc"
        id="net.sf.eclipsefp.haskell.ui.internal.views.filters.ProjectExecutableFilter"/-->
   <commonFilter
        activeByDefault="false"
        name="%haskellElementFilter_name"
        description="%haskellElementFilter_desc"
        id="net.sf.eclipsefp.haskell.ui.internal.views.filters.HaskellElementFilter">
        <filterExpression>
  	      <instanceof value="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.ProjectExplorerOutlineDef"/>
        </filterExpression>
  </commonFilter>
    <commonWizard
		  menuGroupId="net.sf.eclipsefp.haskell.ui"
		  type="new"
		  wizardId="net.sf.eclipsefp.haskell.ui.wizards.NewModuleWizard">
		  <enablement>
		    <or>
		      <adapt type="org.eclipse.core.resources.IFolder" />
		      <adapt type="org.eclipse.core.resources.IProject">
		        <test property="org.eclipse.core.resources.projectNature" 
		              value="net.sf.eclipsefp.haskell.core.project.HaskellNature"/>
		      </adapt>
		    </or>
      </enablement>
    </commonWizard>
  </extension>
  <extension
        point="org.eclipse.ui.ide.markerResolution">
     <markerResolutionGenerator
           class="net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator"
           markerType="org.eclipse.core.resources.problemmarker">
     </markerResolutionGenerator>
  </extension>
  <extension
        point="net.sf.eclipsefp.haskell.ui.CabalChangeListener">
     <listener
           class="net.sf.eclipsefp.haskell.ui.internal.scion.ProjectReloader"
           id="net.sf.eclipsefp.haskell.ui.listener1">
     </listener>
  </extension>
     <extension
         point="org.eclipse.ui.exportWizards">
      <wizard
            icon="icons/obj16/export_src.gif"
            class="net.sf.eclipsefp.haskell.ui.wizards.cabal.CabalSDistWizard"
            name="%cabalSDistWizard.name"
            category="net.sf.eclipsefp.haskell.ui.exportWizardCategory"
            id="net.sf.eclipsefp.haskell.ui.wizards.CabalSDistWizard">
         <description>%cabalSDistWizard.description</description>
      </wizard>
   </extension>
   <extension
         point="org.eclipse.ui.editors.templates">
      <contextType
          class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.codeassist.HSCodeTemplateContextType"
          id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.codeassist.hscodetemplates"
          name="%hsCodeTemplates.context">
      </contextType>
      <include file="templates/hscode-templates.xml"
               translations="$nl$/templates/hscode-templates.properties">
      </include>
   </extension>
   <extension
         point="org.eclipse.ui.actionSets">
      <actionSet
            description="%CodingActionSet.description"
            id="net.sf.eclipsefp.haskell.ui.CodingActionSet"
            label="%CodingActionSet.label"
            visible="false">
         <action
            id="net.sf.eclipsefp.haskell.ui.actions.openDefinition"
            definitionId="net.sf.eclipsefp.ui.commands.navigate.openDefinition"
            label="%openDefinitionAction_label"
            tooltip="%openDefinitionAction_tooltip"
            retarget="true"
            allowLabelUpdate="true"/>
       <!-- class="net.sf.eclipsefp.haskell.ui.actions.OpenDefinitionAction" -->
 <!-- Source menu -->         
         <menu
               id="net.sf.eclipsefp.haskell.ui.sourceMenu"
               path="edit"
               label="%SourceMenu.label">
            <separator
                  name="commentGroup">
            </separator>
            <separator
                  name="editGroup">
            </separator>
         </menu>
<!-- Source menu: commentGroup -->
         <action
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment"
               label="%UncommentAction.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/commentGroup"
               id="net.sf.eclipsefp.haskell.ui.actions.Uncomment">
         </action>
         <action
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.comment"
               label="%CommentAction.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/commentGroup"
               id="net.sf.eclipsefp.haskell.ui.actions.Comment">
         </action>
         <action
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_documentation"
               label="%HaddockDocumentationAction.label"
               style="pulldown"
               class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.actions.HaddockDocumentation"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/commentGroup"
               id="net.sf.eclipsefp.haskell.ui.editor.actions.HaddockDocumentation">
         </action>
<!-- Source menu: editGroup -->         
         <action
               definitionId="org.eclipse.ui.edit.text.shiftLeft"
               label="%ShiftLeftAction.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/editGroup"
               id="net.sf.eclipsefp.haskell.ui.actions.ShiftLeft">
         </action>
         <action
               definitionId="org.eclipse.ui.edit.text.shiftRight"
               label="%ShiftRightAction.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/editGroup"
               id="net.sf.eclipsefp.haskell.ui.actions.ShiftRight">
         </action>
      </actionSet>
   </extension>
   <extension
         point="org.eclipse.ui.actionSetPartAssociations">
      <actionSetPartAssociation
            targetID="net.sf.eclipsefp.haskell.ui.CodingActionSet">
         <part id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor"/>
      </actionSetPartAssociation>
   </extension>
</plugin>
