<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>
   <extension-point id="CabalChangeListener" name="%extPtCabalChange_name" schema="schema/CabalChangeListener.exsd"/>
   <!-- [Wizards] project and module creation -->
   <extension point="org.eclipse.ui.newWizards">
      <wizard
            name="%newProjectWizard_name"
            icon="icons/etool16/newhprj_wiz.gif"
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.NewHaskellProjectWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            project="true"
            id="net.sf.eclipsefp.haskell.ui.wizards.NewHaskellProjectWizard">
         <description>
            %newProjectWizard_desc
         </description>
      </wizard>
      <wizard
            name="%newModuleWizard_name"
            icon="icons/obj16/module.gif"
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.NewModuleWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            project="false"
            id="net.sf.eclipsefp.haskell.ui.wizards.NewModuleWizard">
         <description>
            %newModuleWizard_desc
         </description>
      </wizard>
      <wizard
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.web.NewSnapProjectWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            icon="icons/etool16/newhprj_wiz.gif"
            id="net.sf.eclipsefp.haskell.ui.wizards.web.NewSnapProjectWizard"
            name="%newSnapWizard_name"
            project="true">
      </wizard>
      <wizard
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.web.NewYesodProjectWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            icon="icons/etool16/newhprj_wiz.gif"
            id="net.sf.eclipsefp.haskell.ui.wizards.web.NewYesodProjectWizard"
            name="%newYesodWizard_name"
            project="true">
      </wizard>
      <wizard
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.NewGtkProjectWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            icon="icons/etool16/newhprj_wiz.gif"
            id="net.sf.eclipsefp.haskell.ui.wizards.NewGtkProjectWizard"
            name="%newGtkWizard_name"
            project="true">
      </wizard>
      
      <wizard
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.NewAlexWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            icon="icons/obj16/lhsfile_obj.gif"
            id="net.sf.eclipsefp.haskell.ui.wizards.NewAlexWizard"
            name="%contenttype_alex_name"
            project="false">
      </wizard>
      <wizard
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.NewHappyWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            icon="icons/obj16/lhsfile_obj.gif"
            id="net.sf.eclipsefp.haskell.ui.wizards.NewHappyWizard"
            name="%contenttype_happy_name"
            project="false">
      </wizard>
      <wizard
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.NewUuagcWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            icon="icons/obj16/testsuitestanza.gif"
            id="net.sf.eclipsefp.haskell.ui.wizards.NewUuagcWizard"
            name="%contenttype_uuagc_name"
            project="false">
      </wizard>
   </extension>
   <extension point="org.eclipse.ui.importWizards">
     <wizard
           category="net.sf.eclipsefp.haskell.ui.importWizardCategory"
           class="net.sf.eclipsefp.haskell.ui.internal.wizards.CabalPackageImportWizard"
           icon="icons/etool16/impcprj_wiz.gif"
           id="net.sf.eclipsefp.haskell.ui.internal.wizards.CabalPackageImportWizard"
           name="%importCabalPackageWizard_name">
        <description>
           %importCabalPackageWizard_desc
        </description>
     </wizard>
   </extension>
   
   <!-- [Editors] Haskell code editor -->
   <extension
         point="org.eclipse.ui.editors">
      <editor
            name="%haskellEditor_name"
            extensions="hs,lhs,hsc"
            icon="icons/obj16/hsfile_obj.gif"
            class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor"
            contributorClass="net.sf.eclipsefp.haskell.ui.actions.HaskellEditorActionContributor"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor">
        <contentTypeBinding contentTypeId="net.sf.eclipsefp.haskell.contenttypes.haskell" />
        <contentTypeBinding contentTypeId="net.sf.eclipsefp.haskell.contenttypes.literateHaskell" />
      </editor>
   </extension>
   <extension
         point="org.eclipse.ui.editors.documentProviders">
      <provider
            extensions="hs,lhs,hsc"
            class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellDocumentProvider"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellDocumentProvider">
      </provider>
   </extension>

   <!-- [Editors] Cabal editor -->
   <extension point="org.eclipse.ui.editors">
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalFormEditor"
            contributorClass="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalEditorContributor"
            default="true"
            extensions="cabal"
            icon="$nl$/icons/eview16/cabal.gif"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalFormEditor"
            name="%cabalEditor_name"/>
   </extension>
   <extension
         point="org.eclipse.ui.editors.documentProviders">
      <provider
            extensions="cabal"
            class="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalDocProvider"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalDocProvider">
      </provider>
   </extension>
   <extension
         point="org.eclipse.ui.editors.templates">
      <contextType
            class="org.eclipse.jface.text.templates.TemplateContextType"
            name="%templateContext_name"
            id="cabalPackageDescriptionTemplates"/>
      <include file="templates/cabal-templates.xml"/>
   </extension>

   <extension
         point="org.eclipse.ui.ide.projectNatureImages">
      <image
            icon="icons/ovr16/haskell_ovr.gif"
            natureId="net.sf.eclipsefp.haskell.core.project.HaskellNature"
            id="net.sf.eclipsefp.haskell.core.project.haskellNatureImage">
      </image>
   </extension>
    <extension
         point="org.eclipse.ui.ide.projectNatureImages">
      <image
            icon="icons/ovr16/yesod_ovr.gif"
            natureId="net.sf.eclipsefp.haskell.core.project.YesodNature"
            id="net.sf.eclipsefp.haskell.core.project.yesodNatureImage">
      </image>
   </extension>
   <extension
         point="org.eclipse.ui.decorators">
      <decorator
            adaptable="true"
            label="%haskellDecorator_name"
            class="net.sf.eclipsefp.haskell.ui.decorators.ProjectFoldersDecorator"
            state="true"
            id="net.sf.eclipsefp.haskell.ui.decorators.ProjectFoldersDecorator">
            <enablement>
              <objectClass name="org.eclipse.core.resources.IFolder"/> 
            </enablement>
         <description>
            %haskellDecorator_desc
         </description>
      </decorator>
      <decorator
            label="%problemDecorator_name"
            lightweight="true"
            class="net.sf.eclipsefp.haskell.ui.decorators.ProblemsLabelDecorator"
            state="true"
            id="net.sf.eclipsefp.haskell.ui.decorators.ProblemsLabelDecorator">
            <enablement>
              <objectClass name="org.eclipse.core.resources.IResource"/> 
            </enablement>
         <description>
            %problemDecorator_desc
         </description>
      </decorator>
   </extension>
   <extension
         point="org.eclipse.ui.perspectives">
      <perspective
            name="%haskellPerspective_name"
            icon="icons/etool16/haskell_misc.gif"
            class="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            id="net.sf.eclipsefp.haskell.ui.HaskellPerspective">
      </perspective>
      <perspective
            class="net.sf.eclipsefp.haskell.browser.BrowserPerspective"
            icon="icons/etool16/haskell_misc.gif"
            id="net.sf.eclipsefp.haskell.browser.BrowserPerspective"
            name="%haskellBrowserPerspective_name">
      </perspective>
   </extension>
   <extension point="org.eclipse.ui.perspectiveExtensions">
		<perspectiveExtension targetID="net.sf.eclipsefp.haskell.ui.HaskellPerspective">
			<viewShortcut id="org.eclipse.ui.views.ResourceNavigator"/>
			<viewShortcut id="org.eclipse.ui.navigator.ProjectExplorer"/>
			<viewShortcut id="net.sf.eclipsefp.haskell.browser.views.hoogle.HoogleView"/>
			<viewShortcut id="net.sf.eclipsefp.haskell.browser.views.packages.PackagesView"/>
			<viewShortcut id="net.sf.eclipsefp.haskell.browser.views.modules.ModulesView"/>
			<viewShortcut id="net.sf.eclipsefp.haskell.browser.views.declarations.TypesView"/>
			<viewShortcut id="net.sf.eclipsefp.haskell.browser.views.declarations.FunctionsView"/>
			<viewShortcut id="net.sf.eclipsefp.haskell.ui.views.CabalPackagesView"/>
			
			<newWizardShortcut id="net.sf.eclipsefp.haskell.ui.wizards.NewAlexWizard"/>
			<newWizardShortcut id="net.sf.eclipsefp.haskell.ui.wizards.NewHappyWizard"/>
			<newWizardShortcut id="net.sf.eclipsefp.haskell.ui.wizards.NewUuagcWizard"/>
			<newWizardShortcut id="net.sf.eclipsefp.haskell.ui.wizards.NewHaskellProjectWizard"/>
			<newWizardShortcut id="net.sf.eclipsefp.haskell.ui.wizards.NewModuleWizard"/>
			<newWizardShortcut id="net.sf.eclipsefp.haskell.ui.wizards.web.NewSnapProjectWizard"/>
			<newWizardShortcut id="net.sf.eclipsefp.haskell.ui.wizards.web.NewYesodProjectWizard"/>
			<newWizardShortcut id="net.sf.eclipsefp.haskell.ui.wizards.NewGtkProjectWizard"/>
		</perspectiveExtension>
	</extension>
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            name="%haskellPP_name"
            class="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            id="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP">
      </page>
      <page
            name="%implementationsPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.hsimpls.InstalledImplementationsPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.hsimpls.InstalledImplementationsPP">
      </page>
      <page
            name="%editorPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP">
      </page>
       <page
            name="%editorPP_syntax_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.SyntaxPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.SyntaxPP">
      </page>  
       <!--page
            name="%editorPP_typing_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.TypingPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.TypingPP">
      </page--> 
      <!--page
            name="%editorPP_annotation_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AnnotationsPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AnnotationsPP">
      </page-->      
      <page
            name="%editorPP_tasktags_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.TaskTagsPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.TaskTagsPP">
      </page>      
      <page
            name="%projectWizardPP"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.NewHaskellProjectPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.NewHaskellProjectPP">
      </page>
      <!--page
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.BuildConsolePP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.BuildConsolePP"
            name="%buildConsolePP_name">
      </page-->
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP"
            name="%scionPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP">
      </page>
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.HLintPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.HLintPP"
            name="%hlintPP_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP">
      </page>
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.YesodPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.YesodPP"
            name="%yesodPP_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP">
      </page>
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.SnapPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.SnapPP"
            name="%snapPP_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP">
      </page>
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.SourceGraphPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.SourceGraphPP"
            name="%sourceGraphPP_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP">
      </page>
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.StylishHaskellPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.StylishHaskellPP"
            name="%stylishHaskellPP_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP">
      </page>      
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.AlexPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.AlexPP"
            name="%alexPP_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP">
      </page>      
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.HappyPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.HappyPP"
            name="%happyPP_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP">
      </page>    
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.UuagcPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.UuagcPP"
            name="%uuagcPP_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP">
      </page>    
       <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.CabalDevPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.CabalDevPP"
            name="%cabalDevPP_name"
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.scion.ScionPP">
      </page>    
      
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.DebugPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.DebugPP"
            name="%debugPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP">
      </page>
      <page
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.SearchPathsPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.SearchPathsPP"
            name="%searchPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP">
      </page>
      <page
            category="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.AppearancePP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.templates.HSCodeTemplatePreferences"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.templates.HSCodeTemplatePreferences"
            name="%HaskellSourceTmplatesPP.name">
      </page>
   </extension>
   <extension
         point="org.eclipse.ui.propertyPages">
      <!--page
            name="%projectLibrariesPP_name"
            class="net.sf.eclipsefp.haskell.ui.properties.ImportLibrariesPP"
            id="net.sf.eclipsefp.haskell.ui.properties.ImportLibrariesPP">
         <filter
               name="nature"
               value="net.sf.eclipsefp.haskell.core.project.HaskellNature">
         </filter>
         <filter
               name="open"
               value="true">
         </filter>
         <enabledWhen>
            <adapt type="org.eclipse.core.resources.IProject" />
         </enabledWhen>
      </page-->
	 <page
            name="%projectFlagsPP_name"
            class="net.sf.eclipsefp.haskell.ui.properties.UserFlagsPP"
            id="net.sf.eclipsefp.haskell.ui.properties.UserFlagsPP">
         <filter
               name="nature"
               value="net.sf.eclipsefp.haskell.core.project.HaskellNature">
         </filter>
         <filter
               name="open"
               value="true">
         </filter>
         <enabledWhen>
            <adapt type="org.eclipse.core.resources.IProject" />
         </enabledWhen>
      </page>
      <page
            name="%projectParamsPP_name"
            class="net.sf.eclipsefp.haskell.ui.properties.ExtraCabalParamsPP"
            id="net.sf.eclipsefp.haskell.ui.properties.ExtraCabalParamsPP">
         <filter
               name="nature"
               value="net.sf.eclipsefp.haskell.core.project.HaskellNature">
         </filter>
         <filter
               name="open"
               value="true">
         </filter>
         <enabledWhen>
            <adapt type="org.eclipse.core.resources.IProject" />
         </enabledWhen>
      </page>
      <page
            name="%fileExposeModulesPP_name"
            class="net.sf.eclipsefp.haskell.ui.properties.ModuleInclusionPP"
            id="net.sf.eclipsefp.haskell.ui.properties.ModuleInclusionPP"
            nameFilter="*.hs">
          <enabledWhen>
            <adapt type="org.eclipse.core.resources.IFile" />
         </enabledWhen>
      </page>
       <page
            name="%fileExposeModulesPP_name"
            class="net.sf.eclipsefp.haskell.ui.properties.ModuleInclusionPP"
            id="net.sf.eclipsefp.haskell.ui.properties.ModuleInclusionPP_litt"
            nameFilter="*.lhs">
          <enabledWhen>
            <adapt type="org.eclipse.core.resources.IFile" />
         </enabledWhen>
      </page>
      <page
            name="%fileExposeModulesPP_name"
            class="net.sf.eclipsefp.haskell.ui.properties.ModuleInclusionPP"
            id="net.sf.eclipsefp.haskell.ui.properties.ModuleInclusionPP_hsc"
            nameFilter="*.hsc">
          <enabledWhen>
            <adapt type="org.eclipse.core.resources.IFile" />
         </enabledWhen>
      </page>
   </extension>
   
  
  <extension
         point="org.eclipse.ui.commands">
      <category
            description="%haskellEditorCategory_desc"
            name="%haskellEditorCategory_name"
            id="net.sf.eclipsefp.haskell.ui.category.source"/>
      <category
            description="%references_tooltip"
            name="%references_label"
            id="org.eclipse.ui.category.references"/>
      <command
            description="%firstCharCommand_desc"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%firstCharCommand_name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.firstChar"/>
      <command
            description="%CommentAction.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%CommentAction.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.comment"/>
      <command
            description="%UncommentAction.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%UncommentAction.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment"/>
      <command
            description="%CommentPragmaAction.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%CommentPragmaAction.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.comment_pragma"/>
       <command
            description="%FormatAction.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%FormatAction.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.format"/>
       <command
            description="%ImportsAction.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%ImportsAction.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.imports"/>
      <command
            description="%openDefinitionCommand_desc"
            categoryId="org.eclipse.ui.category.navigate"
            name="%openDefinitionCommand_name"
            id="net.sf.eclipsefp.ui.commands.navigate.openDefinition"/>
      <command
            description="%searchHoogleCommand_desc"
            categoryId="org.eclipse.ui.category.navigate"
            name="%searchHoogleCommand_name"
            id="net.sf.eclipsefp.ui.commands.navigate.searchHoogle"/>
      <command
            description="%references_workspace_tooltip"
            categoryId="org.eclipse.ui.category.references"
            name="%references_workspace_label"
            id="net.sf.eclipsefp.ui.commands.references.workspace"/>
      <command
            description="%references_project_tooltip"
            categoryId="org.eclipse.ui.category.references"
            name="%references_project_label"
            id="net.sf.eclipsefp.ui.commands.references.project"/>
      <command
            description="%watchExpressionCommand_desc"
            categoryId="org.eclipse.debug.ui.category.run"
            name="%watchExpressionCommand_name"
            id="net.sf.eclipsefp.ui.commands.run.watchExpression"/>            
      <command
            description="%displayExpressionCommand_desc"
            categoryId="org.eclipse.debug.ui.category.run"
            name="%displayExpressionCommand_name"
            id="net.sf.eclipsefp.ui.commands.run.displayExpression"/>   
      <command
            description="%HaddockDocumentFollowing.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%HaddockDocumentFollowing.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_following"/>
      <command
            description="%HaddockDocumentPrevious.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%HaddockDocumentPrevious.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_previous"/>
      <command
            description="%HaddockDocumentBlockFollow.description"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%HaddockDocumentBlockFollow.name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_block_following"/>
      <category
            description="%haskellNavigateCategory_desc"
            name="%haskellNavigateCategory_name"
            id="net.sf.eclipsefp.haskell.ui.category.navigate"/>
       <command
            description="%OpenModuleAction.tooltip"
            categoryId="net.sf.eclipsefp.haskell.ui.category.navigate"
            name="%OpenModuleAction.label"
            id="net.sf.eclipsefp.haskell.ui.OpenModuleActionCommand"/>     
            
   </extension>
   <extension
         point="org.eclipse.ui.menus">
      <menuContribution
            locationURI="menu:navigate?after=open.ext">
         <command
               commandId="net.sf.eclipsefp.ui.commands.navigate.openDefinition">
            <visibleWhen checkEnabled="true"/>
         </command>
      </menuContribution>
      <menuContribution
            locationURI="menu:org.eclipse.ui.run?after=emptyBreakpointGroup">
         <command
               commandId="net.sf.eclipsefp.ui.commands.run.watchExpression"
               icon="icons/etool16/watch_exp.gif">
            <visibleWhen checkEnabled="true"/>
         </command>
      </menuContribution>
       <menuContribution
            locationURI="menu:org.eclipse.ui.run?after=emptyBreakpointGroup">
         <command
               commandId="net.sf.eclipsefp.ui.commands.run.displayExpression"
               icon="icons/etool16/insp_exp.gif">
            <visibleWhen checkEnabled="true"/>
         </command>
      </menuContribution>
      <menuContribution
            locationURI="menu:navigate?after=open.ext">
         <command
               commandId="net.sf.eclipsefp.ui.commands.navigate.searchHoogle">
            <visibleWhen checkEnabled="true"/>
         </command>
      </menuContribution>
      <menuContribution
            locationURI="popup:#HaskellEditorContext?after=group.open">
         <command
               commandId="net.sf.eclipsefp.ui.commands.navigate.openDefinition">
            <visibleWhen checkEnabled="true"/>
         </command>
      </menuContribution>
      <menuContribution
            locationURI="popup:#HaskellEditorContext?after=additions">
         <command
               commandId="net.sf.eclipsefp.ui.commands.run.watchExpression"
               icon="icons/etool16/watch_exp.gif">
            <visibleWhen checkEnabled="true"/>
         </command>
      </menuContribution>
            <menuContribution
            locationURI="popup:#HaskellEditorContext?after=additions">
         <command
               commandId="net.sf.eclipsefp.ui.commands.run.displayExpression"
               icon="icons/etool16/insp_exp.gif">
            <visibleWhen checkEnabled="true"/>
         </command>
      </menuContribution>
            <menuContribution
            locationURI="popup:#HaskellEditorContext?after=group.open">
         <command
               commandId="net.sf.eclipsefp.ui.commands.navigate.searchHoogle">
            <visibleWhen checkEnabled="true"/>
         </command>
      </menuContribution>
       <menuContribution
            locationURI="menu:navigate?after=open.ext">
            <menu
               id="net.sf.eclipsefp.haskell.ui.refsMenu"
               path="edit"
               label="%references_label">
		         <command
		               commandId="net.sf.eclipsefp.ui.commands.references.workspace">
		          </command>
		         <command
		               commandId="net.sf.eclipsefp.ui.commands.references.project">
		          </command>
         </menu>
      </menuContribution>
      <menuContribution
            locationURI="popup:#HaskellEditorContext?after=group.open">
             <menu
               id="net.sf.eclipsefp.haskell.ui.refsMenu.popup"
               path="edit"
               label="%references_label">
		         <command
		               commandId="net.sf.eclipsefp.ui.commands.references.workspace">
		            <visibleWhen checkEnabled="true"/>
		         </command>
		    
		         <command
		               commandId="net.sf.eclipsefp.ui.commands.references.project">
		            <visibleWhen checkEnabled="true"/>
		         </command>
         </menu>
      </menuContribution>
   </extension>
   <extension
         point="org.eclipse.ui.contexts">
      <context
            name="%haskellEditorContext_name"
            description="%haskellEditorContext_desc"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context"
            parentId="org.eclipse.ui.contexts.window"/>
       <context
            name="%cabalEditorContext_name"
            description="%cabalEditorContext_desc"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalEditor.context"
            parentId="org.eclipse.ui.contexts.window"/>      
   </extension>
   <extension
         point="org.eclipse.ui.bindings">
         <!-- keys for Line Comment -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="M1+7"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.comment" 
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context"/>
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              platform="carbon"
              sequence="M1+/"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.comment" 
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context"/>
         <!-- keys for Line Uncomment -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="M1+M2+7"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment" 
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context"/>
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              platform="carbon"
              sequence="M1+M2+/"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment" 
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context"/>
         <!-- keys for Comment Pragma -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="M1+M2+C P"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.comment_pragma" 
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context" />
         <!-- keys for Haddock documentation -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="M1+M2+D F"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_following" 
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context" />
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="M1+M2+D P"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_previous" 
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context" />
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="M1+M2+D B"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_block_following" 
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context" />
         <!-- format -->
          <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="M1+M2+F"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.format"
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context" />    
          <!-- organize imports -->
          <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="M1+M2+O"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.imports"
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context" />    
         <!-- keys for navigation -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              commandId="net.sf.eclipsefp.ui.commands.navigate.openDefinition"
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context"
              sequence="F3"/>
          <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              commandId="net.sf.eclipsefp.ui.commands.navigate.searchHoogle"
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context"
              sequence="F4"/>
         <!-- other keys -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.firstChar"
              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.context"
              sequence="Home"/>
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              commandId="net.sf.eclipsefp.haskell.ui.OpenModuleActionCommand"
              sequence="Ctrl+Shift+M"/>      
         <!-- cabal editor keys -->
	         <!-- keys for Line Comment -->
	         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
	              sequence="M1+7"
	              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.comment" 
	              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalEditor.context"/>
	         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
	              platform="carbon"
	              sequence="M1+/"
	              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.comment" 
	              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalEditor.context"/>
	         <!-- keys for Line Uncomment -->
	         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
	              sequence="M1+M2+7"
	              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment" 
	              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalEditor.context"/>
	         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
	              platform="carbon"
	              sequence="M1+M2+/"
	              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment" 
	              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalEditor.context"/>     
	          <!-- other keys -->
	         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
	              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.firstChar"
	              contextId="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalEditor.context"
	              sequence="Home"/>                
   </extension>
   <extension
         point="org.eclipse.ui.handlers">
      <!-- handler for the Open Definition action when invoked from the HaskellEditor -->
      <handler
            class="net.sf.eclipsefp.haskell.ui.handlers.OpenDefinitionHandler"
            commandId="net.sf.eclipsefp.ui.commands.navigate.openDefinition">
         <activeWhen>
            <reference
                  definitionId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.active">
            </reference>
         </activeWhen>
      </handler>
     <!-- handler for the Search in Hoogle action when invoked from the HaskellEditor -->
      <handler
            class="net.sf.eclipsefp.haskell.ui.handlers.SearchInHoogleHandler"
            commandId="net.sf.eclipsefp.ui.commands.navigate.searchHoogle">
         <activeWhen>
            <reference
                  definitionId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.active">
            </reference>
         </activeWhen>
      </handler>
      <!-- handler for the references in worskpace action when invoked from the HaskellEditor -->
      <handler
            class="net.sf.eclipsefp.haskell.ui.handlers.ReferencesWorkspaceHandler"
            commandId="net.sf.eclipsefp.ui.commands.references.workspace">
         <activeWhen>
            <reference
                  definitionId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.active">
            </reference>
         </activeWhen>
      </handler>
      <!-- handler for the references in project action when invoked from the HaskellEditor -->
      <handler
            class="net.sf.eclipsefp.haskell.ui.handlers.ReferencesProjectHandler"
            commandId="net.sf.eclipsefp.ui.commands.references.project">
         <activeWhen>
            <reference
                  definitionId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.active">
            </reference>
         </activeWhen>
      </handler>
      <!-- handler for the Watch expression action when invoked from the HaskellEditor -->
      <handler
            class="net.sf.eclipsefp.haskell.ui.handlers.WatchExpressionHandler"
            commandId="net.sf.eclipsefp.ui.commands.run.watchExpression">
         <activeWhen>
         	<and>
            <reference
                  definitionId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.active">
            </reference>
            <with variable="selection">
	           <iterate operator="or">
	                <instanceof value="org.eclipse.jface.text.ITextSelection"/>
	           </iterate>
	       </with>
            </and>
         </activeWhen>
      </handler>
      <!-- handler for the Inspect expression action when invoked from the HaskellEditor -->
      <handler
            class="net.sf.eclipsefp.haskell.ui.handlers.DisplayExpressionHandler"
            commandId="net.sf.eclipsefp.ui.commands.run.displayExpression">
         <activeWhen>
         	<and>
            <reference
                  definitionId="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.active">
            </reference>
            <with variable="selection">
	           <iterate operator="or">
	                <instanceof value="org.eclipse.jface.text.ITextSelection"/>
	           </iterate>
	       </with>
	       <systemTest property="haskell.debug" value="true"/>
            </and>
         </activeWhen>
      </handler>
   </extension>
   <extension
         point="org.eclipse.core.expressions.definitions">
      <!-- expression that is true when the HaskellEditor is the active part -->
      <definition
            id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor.active">
         <with variable="activeEditorId">
            <equals value="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor"/>
         </with>
      </definition>
   </extension>
   <extension
         point="org.eclipse.ui.editorActions">
      <editorContribution
            targetID="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor"
            id="net.sf.eclipsefp.haskell.ui.editor.editorContribution">
         <action
               label="%firstCharAction_label"
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.firstChar"
               class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.actions.FirstCharAction"
               id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.actions.FirstCharAction"/>
      </editorContribution>
   </extension>
   <extension point="org.eclipse.ui.editors.annotationTypes">
      <type name="net.sf.eclipsefp.haskell.ui.occurrences" />
   </extension>
   <extension point="org.eclipse.ui.editors.markerAnnotationSpecification">
      <specification
            annotationType="net.sf.eclipsefp.haskell.ui.occurrences"
            label="%haskellOccurrence_label"
            icon="icons/obj16/searchm_obj.gif"
            textPreferenceKey="occurrenceIndication"
            textPreferenceValue="false"
            highlightPreferenceKey="occurrenceHighlighting"
            highlightPreferenceValue="true"
            contributesToHeader="false"
            overviewRulerPreferenceKey="occurrenceIndicationInOverviewRuler"
            overviewRulerPreferenceValue="true"
            verticalRulerPreferenceKey="occurrenceIndicationInVerticalRuler"
            verticalRulerPreferenceValue="false"
            colorPreferenceKey="occurrenceIndicationColor"
            colorPreferenceValue="212,212,212"
            presentationLayer="4"
            showInNextPrevDropdownToolbarActionKey="showOccurrenceInNextPrevDropdownToolbarAction"
            showInNextPrevDropdownToolbarAction="true"
            isGoToNextNavigationTargetKey="isOccurrenceGoToNextNavigationTarget"
            isGoToNextNavigationTarget="false"
            isGoToPreviousNavigationTargetKey="isOccurrenceGoToPreviousNavigationTarget"
            isGoToPreviousNavigationTarget="false"
            textStylePreferenceKey="occurrenceTextStyle"
            textStylePreferenceValue="NONE">
      </specification>
   </extension>   
   
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="net.sf.eclipsefp.haskell.ui.HaskellUIPreferenceInitializer">
      </initializer>
      <initializer
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.PreferenceInitializer">
      </initializer>
   </extension>

   <!-- some common categories for eclipsefp subprojects to dock on -->
   <extension point="org.eclipse.ui.newWizards">
      <category name="%newWizardCategory_name"
                id="net.sf.eclipsefp.haskell.ui.newWizardCategory" />
   </extension>
   <extension point="org.eclipse.ui.exportWizards">
      <category name="%exportWizardCategory_name"
                id="net.sf.eclipsefp.haskell.ui.exportWizardCategory" />
   </extension>
   <extension point="org.eclipse.ui.importWizards">
      <category name="%importWizardCategory_name"
                id="net.sf.eclipsefp.haskell.ui.importWizardCategory" />
   </extension>
   <extension point="org.eclipse.ui.cheatsheets.cheatSheetContent">
      <category name="Haskell"
                id="net.sf.eclipsefp.haskell.ui.haskellCheatSheets"/>
   </extension>

   
  <!-- Editor context menu: Coding and Refactoring actions-->

  <extension point="org.eclipse.ui.popupMenus">
    <viewerContribution targetID="#HaskellEditorContext"
                        id="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions">
      <menu id="refactor"
            label="%ctxMenu_refactor_label"
            path="group.edit">
         <separator name="codingGroup" />
      </menu>
      <!--action label="%refPF_label"
              class="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions.MakePointFree" 
              menubarPath="refactor/codingGroup"
              id="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions.MakePointFree"/-->
      <action label="%refRename_label"
              class="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions.Rename" 
              menubarPath="refactor/codingGroup"
              id="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions.Rename"/>
      <!--action label="%optimizeImports_name"
              class="net.sf.eclipsefp.haskell.ui.internal.actions.OptimizeImports" 
              menubarPath="source/organize"
              id="net.sf.eclipsefp.haskell.ui.internal.actions.OptimizeImports"/-->
    </viewerContribution>
    <objectContribution
          id="net.sf.eclipsefp.haskell.ui.contribution1"
          objectClass="org.eclipse.core.resources.IProject">
       <action
             class="net.sf.eclipsefp.haskell.ui.actions.CabalInstallAction"
             enablesFor="1"
             id="net.sf.eclipsefp.haskell.ui.cabalInstallAction"
             icon="icons/eview16/cabal.png"
             label="%cabalInstallWizard.name">
       </action>
        <enablement>
	      <adapt type="org.eclipse.core.resources.IProject">
	        <test property="org.eclipse.core.resources.projectNature" 
	              value="net.sf.eclipsefp.haskell.core.project.HaskellNature"/>
	      </adapt>
	
      </enablement>
    </objectContribution>
    <objectContribution
          id="net.sf.eclipsefp.haskell.ui.contribution2"
          objectClass="org.eclipse.core.resources.IProject">
       <action
             class="net.sf.eclipsefp.haskell.ui.actions.CabalInstallDependenciesAction"
             enablesFor="1"
             id="net.sf.eclipsefp.haskell.ui.cabalInstallDependenciesAction"
             icon="icons/eview16/hackage_install.png"
             label="%cabalInstallDependenciesWizard.name">
       </action>
        <enablement>
	      <adapt type="org.eclipse.core.resources.IProject">
	        <test property="org.eclipse.core.resources.projectNature" 
	              value="net.sf.eclipsefp.haskell.core.project.HaskellNature"/>
	      </adapt>
	
      </enablement>
    </objectContribution>     
    <!--objectContribution
          id="net.sf.eclipsefp.haskell.ui.contribution1"
          objectClass="org.eclipse.core.resources.IProject">
       <action
             class="net.sf.eclipsefp.haskell.ui.actions.CabalTestAction"
             enablesFor="1"
             id="net.sf.eclipsefp.haskell.ui.cabalTestAction"
             label="%cabalTestWizard.name">
       </action>
        <enablement>
	      <adapt type="org.eclipse.core.resources.IProject">
	        <test property="org.eclipse.core.resources.projectNature" 
	              value="net.sf.eclipsefp.haskell.core.project.HaskellNature"/>
	      </adapt>
	
      </enablement>
    </objectContribution-->
  </extension>
  
  <!-- [Views] Project Explorer -->
  
  <extension point="org.eclipse.ui.navigator.viewer">
    <viewerContentBinding viewerId="org.eclipse.ui.navigator.ProjectExplorer">
      <includes>
        <contentExtension pattern="net.sf.eclipsefp.haskell.ui.haskellContent" />
        <contentExtension pattern="net.sf.eclipsefp.haskell.ui.internal.views.filters.*" />	
      </includes>
    </viewerContentBinding>
    <!--viewerActionBinding
         viewerId="org.eclipse.ui.navigator.ProjectExplorer"
         >
      <includes>
      	<actionExtension pattern="org.eclipse.ui.navigator.resources.OpenActions" />
         <actionExtension 
               pattern="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.OpenActionProvider"
               >
         </actionExtension>
      </includes>
   </viewerActionBinding-->
  </extension>
  
  <extension point="org.eclipse.ui.navigator.navigatorContent">
    <navigatorContent
      name="%navigatorContent_name"
      icon="$nl$/icons/etool16/haskell_misc.gif"
      activeByDefault="true"
      contentProvider="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.HaskellResourceExtensionCP"
      labelProvider="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.HaskellResourceExtensionLP"   
      id="net.sf.eclipsefp.haskell.ui.haskellContent"
      priority="high">
      <triggerPoints>
        <or>
          <adapt type="org.eclipse.core.resources.IProject">
            <test property="org.eclipse.core.resources.projectNature" 
                  value="net.sf.eclipsefp.haskell.core.project.HaskellNature"/>
          </adapt>
          <instanceof value="org.eclipse.core.resources.IResource" /> 
          <instanceof value="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.ProjectExplorerOutlineDef" />  
        </or>
      </triggerPoints>
      <possibleChildren>
        <or>         
          <instanceof value="org.eclipse.core.resources.IResource" /> 
          <instanceof value="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.model.GHCSystemLibrary" /> 
          <instanceof value="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.ProjectExplorerOutlineDef" />
          <instanceof
                value="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.CabalFolder">
          </instanceof>  
        </or>
      </possibleChildren>
       <actionProvider
            class="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.OpenActionProvider"
            id="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.OpenActionProvider"
            ><!-- overrides="org.eclipse.ui.navigator.resources.OpenActions"-->
          <enablement>
          <or>
          		<instanceof value="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.ProjectExplorerOutlineDef"/>
             	<instanceof value="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.ProjectExplorerStanza"/>
             	</or>
          </enablement>
        </actionProvider>
            <commonSorter
               class="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.HaskellResourceExtensionSorter"
               id="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.HaskellResourceExtensionSorter">
            <parentExpression>
              <instanceof value="org.eclipse.core.resources.IProject" /> 
            </parentExpression>
         </commonSorter>
    </navigatorContent>
    <!--commonFilter
        activeByDefault="false"
        class="net.sf.eclipsefp.haskell.ui.internal.views.common.ProjectExecutableFilter"
        name="%projectExecutableFilter_name"
        description="%projectExecutableFilter_desc"
        id="net.sf.eclipsefp.haskell.ui.internal.views.filters.ProjectExecutableFilter"/-->
   <commonFilter
        activeByDefault="false"
        name="%haskellElementFilter_name"
        description="%haskellElementFilter_desc"
        id="net.sf.eclipsefp.haskell.ui.internal.views.filters.HaskellElementFilter">
        <filterExpression>
  	      <instanceof value="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.ProjectExplorerOutlineDef"/>
        </filterExpression>
  </commonFilter>
    <commonWizard
		  menuGroupId="net.sf.eclipsefp.haskell.ui"
		  type="new"
		  wizardId="net.sf.eclipsefp.haskell.ui.wizards.NewModuleWizard">
		  <enablement>
		    <or>
		      <adapt type="org.eclipse.core.resources.IFolder" />
		      <adapt type="org.eclipse.core.resources.IProject">
		        <test property="org.eclipse.core.resources.projectNature" 
		              value="net.sf.eclipsefp.haskell.core.project.HaskellNature"/>
		      </adapt>
		    </or>
      </enablement>
    </commonWizard>
    <commonWizard type="new"
                  wizardId="net.sf.eclipsefp.haskell.ui.wizards.NewHaskellProjectWizard">
      <enablement></enablement>
    </commonWizard>
  </extension>
  <extension
        point="org.eclipse.ui.ide.markerResolution">
     <markerResolutionGenerator
           class="net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator"
           markerType="org.eclipse.core.resources.problemmarker">
     </markerResolutionGenerator>
  </extension>
  <!--extension
        point="net.sf.eclipsefp.haskell.ui.CabalChangeListener">
     <listener
           class="net.sf.eclipsefp.haskell.ui.internal.scion.ProjectReloader"
           id="net.sf.eclipsefp.haskell.ui.listener1">
     </listener>
  </extension-->
     <extension
         point="org.eclipse.ui.exportWizards">
      <wizard
            icon="icons/obj16/export_src.gif"
            class="net.sf.eclipsefp.haskell.ui.wizards.cabal.CabalSDistWizard"
            name="%cabalSDistWizard.name"
            category="net.sf.eclipsefp.haskell.ui.exportWizardCategory"
            id="net.sf.eclipsefp.haskell.ui.wizards.CabalSDistWizard">
         <description>%cabalSDistWizard.description</description>
      </wizard>
       <wizard
            icon="icons/obj16/haddock.gif"
            class="net.sf.eclipsefp.haskell.ui.wizards.cabal.CabalHaddockWizard"
            name="%cabalHaddockWizard.name"
            category="net.sf.eclipsefp.haskell.ui.exportWizardCategory"
            id="net.sf.eclipsefp.haskell.ui.wizards.CabalHaddockWizard">
         <description>%cabalHaddockWizard.description</description>
      </wizard>
   </extension>
   <extension
         point="org.eclipse.ui.editors.templates">
      <contextType
          class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.codeassist.HSCodeTemplateContextType"
          id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.codeassist.hscodetemplates"
          name="%hsCodeTemplates.context">
      </contextType>
      <include file="templates/hscode-templates.xml"
               translations="$nl$/templates/hscode-templates.properties">
      </include>
   </extension>
   <extension
         point="org.eclipse.ui.actionSets">
      <actionSet
            description="%CodingActionSet.description"
            id="net.sf.eclipsefp.haskell.ui.CodingActionSet"
            label="%CodingActionSet.label"
            visible="false">
         <!--action
            id="net.sf.eclipsefp.haskell.ui.actions.openDefinition"
            definitionId="net.sf.eclipsefp.ui.commands.navigate.openDefinition"
            label="%openDefinitionAction_label"
            tooltip="%openDefinitionAction_tooltip"
            retarget="true"
            allowLabelUpdate="true"/>
         <action
            id="net.sf.eclipsefp.haskell.ui.actions.searchHoogle"
            definitionId="net.sf.eclipsefp.ui.commands.navigate.searchHoogle"
            label="%searchHoogleAction_label"
            tooltip="%searchHoogleAction_tooltip"
            retarget="true"
            allowLabelUpdate="true"/-->   

       <!-- references -->
       <!--menu
		  id="org.eclipse.search.menu"
		  label="%searchMenu.label"
		  path="navigate">
		  <groupMarker name="internalDialogGroup"/>  
		  <groupMarker name="dialogGroup"/>          
		  <separator name="contextMenuActionsGroup"/>
		</menu>
         <menu
               id="net.sf.eclipsefp.haskell.ui.refsMenu"
               path="org.eclipse.search.menu/contextMenuActionsGroup"
               label="%references_label">
               <groupMarker name="main"/>
         </menu>
         <action
            id="net.sf.eclipsefp.haskell.ui.actions.references.workspace"
            definitionId="net.sf.eclipsefp.ui.commands.references.workspace"
            label="%references_workspace_label"
            tooltip="%references_workspace_tooltip"
            retarget="true"
            allowLabelUpdate="true"
            menubarPath="org.eclipse.search.menu/net.sf.eclipsefp.haskell.ui.refsMenu/main"
            /> 
         <action
            id="net.sf.eclipsefp.haskell.ui.actions.references.project"
            definitionId="net.sf.eclipsefp.ui.commands.references.project"
            label="%references_project_label"
            tooltip="%references_project_tooltip"
            retarget="true"
            allowLabelUpdate="true"
            menubarPath="org.eclipse.search.menu/net.sf.eclipsefp.haskell.ui.refsMenu/main"
          	/--> 
             

 <!-- Source menu -->         
         <menu
               id="net.sf.eclipsefp.haskell.ui.sourceMenu"
               path="edit"
               label="%SourceMenu.label">
            <separator name="commentGroup"/>
            <separator name="editGroup"/>
         </menu>
<!-- Source menu: commentGroup -->
         <action
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment"
               label="%UncommentAction.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/commentGroup"
               id="net.sf.eclipsefp.haskell.ui.actions.Uncomment">
         </action>
         <action
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.comment"
               label="%CommentAction.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/commentGroup"
               id="net.sf.eclipsefp.haskell.ui.actions.Comment">
         </action>
         <menu
               path="net.sf.eclipsefp.haskell.ui.sourceMenu/commentGroup"
               id="HaddockDocumentation"
               label="%HaddockDocumentation.label">
            <separator name="haddockDoc"/>
         </menu>
         <action
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_following"
               label="%HaddockDocumentFollowing.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/HaddockDocumentation/haddockDoc"
               id="net.sf.eclipsefp.haskell.ui.actions.Haddock.Following"/>
         <action
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_previous"
               label="%HaddockDocumentPrevious.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/HaddockDocumentation/haddockDoc"
               id="net.sf.eclipsefp.haskell.ui.actions.Haddock.Previous"/>
         <action
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.haddock_block_following"
               label="%HaddockDocumentBlockFollow.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/HaddockDocumentation/haddockDoc"
               id="net.sf.eclipsefp.haskell.ui.actions.Haddock.Block.Following"/>
         <action
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.comment_pragma"
               label="%CommentPragmaAction.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/commentGroup"
               id="net.sf.eclipsefp.haskell.ui.actions.Comment.Pragma"/>
         <action
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.format"
               label="%FormatAction.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/commentGroup"
               id="net.sf.eclipsefp.haskell.ui.actions.Format"/>
         <action
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.imports"
               label="%ImportsAction.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/commentGroup"
               id="net.sf.eclipsefp.haskell.ui.actions.Imports"/>
<!-- Source menu: editGroup -->         
         <action
               definitionId="org.eclipse.ui.edit.text.shiftLeft"
               label="%ShiftLeftAction.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/editGroup"
               id="net.sf.eclipsefp.haskell.ui.actions.ShiftLeft">
         </action>
         <action
               definitionId="org.eclipse.ui.edit.text.shiftRight"
               label="%ShiftRightAction.label"
               retarget="true"
               menubarPath="net.sf.eclipsefp.haskell.ui.sourceMenu/editGroup"
               id="net.sf.eclipsefp.haskell.ui.actions.ShiftRight">
         </action>
        
      </actionSet>
	  <actionSet id="net.sf.eclipsefp.haskell.ui.navigation" label="%NavigationActionSet.label" visible="true">
        <action 
        	class="net.sf.eclipsefp.haskell.ui.actions.OpenModuleAction" 
        	icon="icons/obj16/module.gif" 
        	id="net.sf.eclipsefp.haskell.ui.actions.OpenModuleAction" 
        	label="%OpenModuleAction.label" 
        	menubarPath="navigate/open.ext3" 
        	style="push" 
        	toolbarPath="org.eclipse.search.searchActionSet/Search" 
        	tooltip="%OpenModuleAction.tooltip" 
        	definitionId="net.sf.eclipsefp.haskell.ui.OpenModuleActionCommand"/> 
      </actionSet>
   </extension>
   <extension
         point="org.eclipse.ui.actionSetPartAssociations">
      <actionSetPartAssociation
            targetID="net.sf.eclipsefp.haskell.ui.CodingActionSet">
         <part id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor"/>
      </actionSetPartAssociation>
   </extension>
   <extension
         point="org.eclipse.ui.views">
      <category
            id="net.sf.eclipsefp.haskell.browser"
            name="%haskellBrowserPerspective_category">
      </category>
      <category
            id="net.sf.eclipsefp.haskell"
            name="%viewCategory_name">
      </category>      
      <view
            category="net.sf.eclipsefp.haskell.browser"
            class="net.sf.eclipsefp.haskell.browser.views.packages.PackagesView"
            icon="icons/obj16/package.gif"
            id="net.sf.eclipsefp.haskell.browser.views.packages.PackagesView"
            name="%haskellBrowser_packagesView">
      </view>
      <view
            category="net.sf.eclipsefp.haskell.browser"
            class="net.sf.eclipsefp.haskell.browser.views.modules.ModulesView"
            icon="icons/obj16/module.gif"
            id="net.sf.eclipsefp.haskell.browser.views.modules.ModulesView"
            name="%haskellBrowser_modulesView">
      </view>
      <view
            category="net.sf.eclipsefp.haskell.browser"
            class="net.sf.eclipsefp.haskell.browser.views.declarations.TypesView"
            icon="icons/obj16/datadecl.gif"
            id="net.sf.eclipsefp.haskell.browser.views.declarations.TypesView"
            name="%haskellBrowser_typesView"
            restorable="true">
      </view>
      <view
            category="net.sf.eclipsefp.haskell.browser"
            class="net.sf.eclipsefp.haskell.browser.views.declarations.FunctionsView"
            icon="icons/obj16/functionbinding.gif"
            id="net.sf.eclipsefp.haskell.browser.views.declarations.FunctionsView"
            name="%haskellBrowser_functionsView"
            restorable="true">
      </view>
      <view
            category="net.sf.eclipsefp.haskell"
            class="net.sf.eclipsefp.haskell.browser.views.hoogle.HoogleView"
            icon="icons/obj16/lambda.gif"
            id="net.sf.eclipsefp.haskell.browser.views.hoogle.HoogleView"
            name="%haskellBrowser_hoogleView"
            restorable="true">
      </view>
      <view
            category="net.sf.eclipsefp.haskell"
            class="net.sf.eclipsefp.haskell.ui.views.CabalPackagesView"
            icon="icons/eview16/cabal.png"
            id="net.sf.eclipsefp.haskell.ui.views.CabalPackagesView"
            name="%haskellBrowser_cabalPackagesView"
            restorable="true">
      </view>
   </extension>
   <extension
         point="org.eclipse.ui.viewActions">
      <viewContribution
            id="net.sf.eclipsefp.haskell.browser.views.modules.modulesViewContribution"
            targetID="net.sf.eclipsefp.haskell.browser.views.modules.ModulesView">
         <action
               class="net.sf.eclipsefp.haskell.browser.views.modules.ModulesViewHierarchicalDelegate"
               id="net.sf.eclipsefp.haskell.browser.views.modules.modulesViewHierarchical"
               label="%haskellBrowser_hierarchical"
               menubarPath="net.sf.eclipsefp.haskell.browser.views.modules.modulesViewPulldown/content"
               style="radio">
         </action>
         <action
               class="net.sf.eclipsefp.haskell.browser.views.modules.ModulesViewFlatDelegate"
               id="net.sf.eclipsefp.haskell.browser.views.modules.modulesViewFlat"
               label="%haskellBrowser_flat"
               menubarPath="net.sf.eclipsefp.haskell.browser.views.modules.modulesViewPulldown/content"
               style="radio">
         </action>
         <menu
               id="net.sf.eclipsefp.haskell.browser.views.modules.modulesViewPulldown"
               label="%haskellBrowser_viewStyle"
               path="additions">
            <groupMarker
                  name="content">
            </groupMarker>
            <separator
                  name="additions">
            </separator>
         </menu>
      </viewContribution>
   </extension>
   <extension
         point="org.eclipse.ltk.core.refactoring.renameParticipants">
      <renameParticipant
            class="net.sf.eclipsefp.haskell.ui.internal.refactoring.participants.RenameParticipant"
            id="net.sf.eclipsefp.haskell.ui.internal.refactoring.participants.RenameParticipant"
            name="Rename Haskell module">
         <enablement>
            <with
                  variable="affectedNatures">
               <iterate
                     operator="or">
                  <equals
                        value="net.sf.eclipsefp.haskell.core.project.HaskellNature">
                  </equals>
               </iterate>
            </with>
            <with
                  variable="element">
               <adapt
                     type="org.eclipse.core.resources.IFile">
                  <test
                        property="org.eclipse.core.resources.contentTypeId"
                        value="net.sf.eclipsefp.haskell.contenttypes.haskell">
                  </test>
               </adapt>
            </with>
         </enablement>
      </renameParticipant>
      <renameParticipant
            class="net.sf.eclipsefp.haskell.ui.internal.refactoring.participants.RenameFolderParticipant"
            id="net.sf.eclipsefp.haskell.ui.internal.refactoring.participants.RenameFolderParticipant"
            name="Rename Haskell folder">
         <enablement>
            <instanceof
                  value="org.eclipse.core.resources.IFolder">
            </instanceof>
         </enablement>
      </renameParticipant>
   </extension>
   <extension
         point="org.eclipse.ltk.core.refactoring.moveParticipants">
      <moveParticipant
            class="net.sf.eclipsefp.haskell.ui.internal.refactoring.participants.MoveParticipant"
            id="net.sf.eclipsefp.haskell.ui.internal.refactoring.participants.MoveParticipant"
            name="Move Haskell module">
         <enablement>
            <with
                  variable="affectedNatures">
               <iterate
                     operator="or">
                  <equals
                        value="net.sf.eclipsefp.haskell.core.project.HaskellNature">
                  </equals>
               </iterate>
            </with>
            <with
                  variable="element">
               <adapt
                     type="org.eclipse.core.resources.IFile">
                  <test
                        property="org.eclipse.core.resources.contentTypeId"
                        value="net.sf.eclipsefp.haskell.contenttypes.haskell">
                  </test>
               </adapt>
            </with></enablement>
      </moveParticipant>
      <moveParticipant
            class="net.sf.eclipsefp.haskell.ui.internal.refactoring.participants.MoveFolderParticipant"
            id="net.sf.eclipsefp.haskell.ui.internal.refactoring.participants.MoveFolderParticipant"
            name="Move Haskell folder">
         <enablement>
            <instanceof
                  value="org.eclipse.core.resources.IFolder">
            </instanceof>
         </enablement>
      </moveParticipant>
   </extension>
   <extension
         point="org.eclipse.ltk.core.refactoring.copyParticipants">
      <copyParticipant
            class="net.sf.eclipsefp.haskell.ui.internal.refactoring.participants.CopyParticipant"
            id="net.sf.eclipsefp.haskell.ui.internal.refactoring.participants.CopyParticipant"
            name="Copy Haskell module">
         <enablement>
            <with
                  variable="affectedNatures">
               <iterate
                     operator="or">
                  <equals
                        value="net.sf.eclipsefp.haskell.core.project.HaskellNature">
                  </equals>
               </iterate>
            </with>
            <with
                  variable="element">
               <adapt
                     type="org.eclipse.core.resources.IFile">
                  <test
                        property="org.eclipse.core.resources.contentTypeId"
                        value="net.sf.eclipsefp.haskell.contenttypes.haskell">
                  </test>
               </adapt>
            </with>
         </enablement>
      </copyParticipant>
   </extension>
   <extension
         point="org.eclipse.ui.popupMenus">
      <objectContribution
            adaptable="false"
            id="net.sf.eclipsefp.haskell.ui.sourcegraph.run"
            objectClass="org.eclipse.core.resources.IProject">
         <action
               class="net.sf.eclipsefp.haskell.ui.sourcegraph.RunActionDelegate"
               enablesFor="1"
               id="net.sf.eclipsefp.haskell.ui.sourcegraph.runAction"
               label="%sourcegraph_run">
         </action>
         <enablement>
            <adapt
                  type="org.eclipse.core.resources.IProject">
               <test
                     property="org.eclipse.core.resources.projectNature"
                     value="net.sf.eclipsefp.haskell.core.project.HaskellNature">
               </test>
            </adapt>
         </enablement>
      </objectContribution>
   </extension>
   <extension
         point="org.eclipse.ui.editors.documentProviders">
      <provider
            class="org.eclipse.ui.editors.text.TextFileDocumentProvider"
            extensions="x,y,ag"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.partitioned.DocumentProvider">
      </provider>
   </extension>
   <extension
         point="org.eclipse.ui.editors">
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.partitioned.AlexEditor"
            contributorClass="net.sf.eclipsefp.haskell.ui.internal.editors.partitioned.AlexEditorContributor"
            extensions="x"
            icon="icons/obj16/lhsfile_obj.gif"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.partitioned.AlexEditor"
            name="%alexEditor_name">
         <contentTypeBinding
               contentTypeId="net.sf.eclipsefp.haskell.contenttypes.alex">
         </contentTypeBinding>
      </editor>
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.partitioned.HappyEditor"
            contributorClass="net.sf.eclipsefp.haskell.ui.internal.editors.partitioned.HappyEditorContributor"
            extensions="y"
            icon="icons/obj16/lhsfile_obj.gif"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.partitioned.HappyEditor"
            name="%happyEditor_name">
         <contentTypeBinding
               contentTypeId="net.sf.eclipsefp.haskell.contenttypes.happy">
         </contentTypeBinding>
      </editor>
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.partitioned.UuagcEditor"
            contributorClass="net.sf.eclipsefp.haskell.ui.internal.editors.partitioned.UuagcEditorContributor"
            extensions="ag"
            icon="icons/obj16/testsuitestanza.gif"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.partitioned.UuagcEditor"
            name="%uuagcEditor_name">
         <contentTypeBinding
               contentTypeId="net.sf.eclipsefp.haskell.contenttypes.uuagc">
         </contentTypeBinding>
      </editor>
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.web.HeistXHTMLTemplateEditor"
            contributorClass="org.eclipse.wst.html.ui.internal.edit.ui.ActionContributorHTML"
            extensions="tpl"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.web.HeistXHTMLTemplateEditor"
            name="%tplEditor_name">
         <contentTypeBinding
               contentTypeId="net.sf.eclipsefp.haskell.contenttypes.tpl">
         </contentTypeBinding>
      </editor>
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.web.HeistXMLTemplateEditor"
            contributorClass="org.eclipse.wst.xml.ui.internal.tabletree.XMLMultiPageEditorActionBarContributor"
            extensions="xtpl"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.web.HeistXMLTemplateEditor"
            name="%xtplEditor_name">
         <contentTypeBinding
               contentTypeId="net.sf.eclipsefp.haskell.contenttypes.xtpl">
         </contentTypeBinding>
      </editor>
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.web.CassiusEditor"
            contributorClass="org.eclipse.wst.css.ui.internal.ActionContributorCSS"
            extensions="cassius"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.web.CassiusEditor"
            name="%cassiusEditor_name">
         <contentTypeBinding
               contentTypeId="net.sf.eclipsefp.haskell.contenttypes.cassius">
         </contentTypeBinding>
      </editor>
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.web.HamletEditor"
            contributorClass="org.eclipse.wst.html.ui.internal.edit.ui.ActionContributorHTML"
            extensions="hamlet"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.web.HamletEditor"
            name="%hamletEditor_name">
         <contentTypeBinding
               contentTypeId="net.sf.eclipsefp.haskell.contenttypes.hamlet">
         </contentTypeBinding>
      </editor>
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.web.JuliusEditor"
            contributorClass="org.eclipse.wst.jsdt.internal.ui.javaeditor.CompilationUnitEditorActionContributor"
            extensions="julius"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.web.JuliusEditor"
            name="%juliusEditor_name">
         <contentTypeBinding
               contentTypeId="net.sf.eclipsefp.haskell.contenttypes.julius">
         </contentTypeBinding>
      </editor>
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.web.LuciusEditor"
            contributorClass="org.eclipse.wst.css.ui.internal.ActionContributorCSS"
            extensions="lucius"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.web.LuciusEditor"
            name="%luciusEditor_name">
         <contentTypeBinding
               contentTypeId="net.sf.eclipsefp.haskell.contenttypes.lucius">
         </contentTypeBinding>
      </editor>
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.uuagcOptions.UuagcOptionsFormEditor"
            contributorClass="net.sf.eclipsefp.haskell.ui.internal.editors.uuagcOptions.UuagcOptionsActionContributor"
            extensions="x"
            icon="icons/obj16/testsuitestanza.gif"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.uuagcOptions.UuagcOptionsFormEditor"
            name="%uuagc_options_name">
         <contentTypeBinding
               contentTypeId="net.sf.eclipsefp.haskell.contenttypes.uuagc_options">
         </contentTypeBinding>
      </editor>
   </extension>
   <extension
         point="org.eclipse.core.filebuffers.documentSetup">
      <participant
            class="net.sf.eclipsefp.haskell.ui.internal.editors.partitioned.PartitionDocumentSetup"
            extensions="x,y,ag">
      </participant>
   </extension>

   <extension
         point="org.eclipse.ui.ide.markerResolution">
      <markerResolutionGenerator
            class="net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator"
            markerType="net.sf.eclipsefp.haskell.core.problem">
      </markerResolutionGenerator>
      <markerResolutionGenerator
            class="net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator"
            markerType="net.sf.eclipsefp.haskell.core.projectProblem">
      </markerResolutionGenerator>
      <markerResolutionGenerator
            class="net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator"
            markerType="net.sf.eclipsefp.haskell.core.hlint">
      </markerResolutionGenerator>      
      
   </extension>
   
   <extension
	    point="org.eclipse.search.searchResultViewPages">
	 <viewPage
	  	id="net.sf.eclipsefp.haskell.ui.HaskellUsageResultPage"
	  	searchResultClass="net.sf.eclipsefp.haskell.ui.internal.search.UsageSearchResult"
	  	class="net.sf.eclipsefp.haskell.ui.internal.search.UsageSearchPage">
	 </viewPage>
	</extension>
	
	<extension point="org.eclipse.search.searchPages">
	   <page id="net.sf.eclipsefp.haskell.ui.HaskellSearchPage"
			icon="icons/obj16/hsearch_obj.gif"
			label="%HaskellSearchPage.label"
			sizeHint="460,160"
			extensions="hs:90, lhs:90"
			showScopeSection="true"
			canSearchEnclosingProjects="true"
			class="net.sf.eclipsefp.haskell.ui.internal.search.HaskellSearchPage">
		</page>
</extension>
 <extension
       point="org.eclipse.ui.themes">
       <themeElementCategory
		id="net.sf.eclipsefp.haskell.themeElementCategory" label="%theme.category">
		<description>%theme.category.description</description>
	</themeElementCategory>

	<colorDefinition
		categoryId="net.sf.eclipsefp.haskell.themeElementCategory"
		id="net.sf.eclipsefp.haskell.themeElementCategory.tooltip.fgColor" label="%theme.tooltip.fgcolor"
		value="COLOR_BLACK">
		<description>%theme.tooltip.fgcolor.description</description>
	</colorDefinition>
	<colorDefinition
		categoryId="net.sf.eclipsefp.haskell.themeElementCategory"
		id="net.sf.eclipsefp.haskell.themeElementCategory.tooltip.bgColor" label="%theme.tooltip.bgcolor"
		value="250,251,197">
		<description>%theme.tooltip.bgcolor.description</description>
	</colorDefinition>

	<fontDefinition
		categoryId="net.sf.eclipsefp.haskell.themeElementCategory"
		id="net.sf.eclipsefp.haskell.themeElementCategory.tooltip.font" label="%theme.tooltip.font"
		value="Verdana-regular-8">
		<description>%theme.tooltip.font.description</description>
	</fontDefinition>
 </extension>
</plugin>
