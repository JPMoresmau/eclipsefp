<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>
   <extension
         point="org.eclipse.ui.newWizards">
      <wizard
            name="%newProjectWizard_name"
            icon="icons/etool16/hsicon16.gif"
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.NewHaskellProjectWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            project="true"
            id="net.sf.eclipsefp.haskell.ui.wizards.NewHaskellProjectWizard">
         <description>
            %newProjectWizard_desc
         </description>
      </wizard>
      <primaryWizard
            id="net.sf.eclipsefp.haskell.ui.wizards.NewHaskellProjectWizard">
      </primaryWizard>
      <wizard
            name="%newModuleWizard_name"
            icon="icons/obj16/module.gif"
            category="net.sf.eclipsefp.haskell.ui.newWizardCategory"
            class="net.sf.eclipsefp.haskell.ui.wizards.NewModuleWizard"
            finalPerspective="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            project="false"
            id="net.sf.eclipsefp.haskell.ui.wizards.NewModuleWizard">
         <description>
            %newModuleWizard_desc
         </description>
      </wizard>
   </extension>
   
   <!-- [Editors] Haskell code editor -->
   <extension
         point="org.eclipse.ui.editors">
      <editor
            name="%haskellEditor_name"
            extensions="hs,lhs"
            icon="icons/etool16/hsicon16.gif"
            class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor"
            contributorClass="org.eclipse.ui.editors.text.TextEditorActionContributor"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellEditor">
      </editor>
   </extension>
   <extension
         point="org.eclipse.ui.editors.documentProviders">
      <provider
            extensions="hs,lhs"
            class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellDocumentProvider"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.HaskellDocumentProvider">
      </provider>
   </extension>

   <!-- [Editors] Cabal editor -->
   <extension point="org.eclipse.ui.editors">
      <editor
            class="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalFormEditor"
            contributorClass="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalEditorContributor"
            default="true"
            extensions="cabal"
            icon="$nl$/icons/eview16/cabal.gif"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalFormEditor"
            name="%cabalEditor_name"/>
   </extension>
   <extension
         point="org.eclipse.ui.editors.documentProviders">
      <provider
            extensions="cabal"
            class="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalDocProvider"
            id="net.sf.eclipsefp.haskell.ui.internal.editors.cabal.CabalDocProvider">
      </provider>
   </extension>
   <extension
         point="org.eclipse.ui.editors.templates">
      <contextType
            class="org.eclipse.jface.text.templates.TemplateContextType"
            name="%templateContext_name"
            id="cabalPackageDescriptionTemplates"/>
      <include file="templates/templates.xml"/>
   </extension>

   <extension
         point="org.eclipse.ui.ide.projectNatureImages">
      <image
            icon="icons/etool16/haskellNature.gif"
            natureId="net.sf.eclipsefp.haskell.core.project.HaskellNature"
            id="net.sf.eclipsefp.haskell.core.project.haskellNatureImage">
      </image>
   </extension>
   <extension
         point="org.eclipse.ui.decorators">
      <decorator
            adaptable="true"
            label="%haskellDecorator_name"
            class="net.sf.eclipsefp.haskell.ui.decorators.ProjectFoldersDecorator"
            state="true"
            id="net.sf.eclipsefp.haskell.ui.decorators.ProjectFoldersDecorator">
            <enablement>
              <objectClass name="org.eclipse.core.resources.IFolder"/> 
            </enablement>
         <description>
            %haskellDecorator_desc
         </description>
      </decorator>
   </extension>
   <extension
         point="org.eclipse.ui.perspectives">
      <perspective
            name="%haskellPerspective_name"
            icon="icons/etool16/hsicon16.gif"
            class="net.sf.eclipsefp.haskell.ui.HaskellPerspective"
            id="net.sf.eclipsefp.haskell.ui.HaskellPerspective">
      </perspective>
   </extension>
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            name="%haskellPP_name"
            class="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            id="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP">
      </page>
      <page
            name="%implementationsPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.hsimpls.InstalledImplementationsPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.hsimpls.InstalledImplementationsPP">
      </page>
      <page
            name="%editorPP_name"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.HaskellEditorPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.editor.HaskellEditorPP">
      </page>
      <page
            name="%projectWizardPP"
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.NewHaskellProjectPP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.NewHaskellProjectPP">
      </page>
      <page
            category="net.sf.eclipsefp.haskell.ui.preferences.HaskellCategoryPP"
            class="net.sf.eclipsefp.haskell.ui.internal.preferences.BuildConsolePP"
            id="net.sf.eclipsefp.haskell.ui.internal.preferences.BuildConsolePP"
            name="%buildConsolePP_name">
      </page>
   </extension>
   <extension
         name="%importLibsPP_name"
         point="org.eclipse.ui.propertyPages">
      <page
            name="%projectImportLibsPP_name"
            class="net.sf.eclipsefp.haskell.ui.properties.ImportLibrariesPP"
            id="net.sf.eclipsefp.haskell.ui.properties.ImportLibrariesPP">
         <filter
               name="nature"
               value="net.sf.eclipsefp.haskell.core.project.HaskellNature">
         </filter>
         <filter
               name="open"
               value="true">
         </filter>
         <enabledWhen>
            <adapt type="org.eclipse.core.resources.IProject" />
         </enabledWhen>
      </page>
   </extension>
  <extension
         point="org.eclipse.ui.commands">
      <category
            description="%haskellEditorCategory_desc"
            name="%haskellEditorCategory_name"
            id="net.sf.eclipsefp.haskell.ui.category.source"/>
      <command
            description="%firstCharCommand_desc"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%firstCharCommand_name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.firstChar"/>
      <command
            description="%commentCommand_desc"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%commentCommand_name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.comment"/>
      <command
            description="%uncommentCommand_desc"
            categoryId="net.sf.eclipsefp.haskell.ui.category.source"
            name="%uncommentCommand_name"
            id="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment"/>
   </extension>
   <extension
         point="org.eclipse.ui.bindings">
         <!-- keys for Comment -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="Ctrl+/"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.comment" />
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="Ctrl+7"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.comment" />
         <!-- keys for Uncomment -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="Ctrl+Shift+/"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment" />
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              sequence="Ctrl+ÃŸ"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.uncomment" />
         <!-- other keys -->
         <key schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
              commandId="net.sf.eclipsefp.haskell.ui.editor.actions.firstChar"
              sequence="Home"/>
   </extension>
   <extension
         point="org.eclipse.ui.editorActions">
      <editorContribution
            targetID="net.sf.eclipsefp.haskell.ui.editor.HaskellEditor"
            id="net.sf.eclipsefp.haskell.ui.editor.editorContribution">
         <action
               label="%firstCharAction_label"
               definitionId="net.sf.eclipsefp.haskell.ui.editor.actions.firstChar"
               class="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.actions.FirstCharAction"
               id="net.sf.eclipsefp.haskell.ui.internal.editors.haskell.actions.FirstCharAction"/>
      </editorContribution>
   </extension>
   <extension point="org.eclipse.ui.editors.annotationTypes">
      <type name="net.sf.eclipsefp.haskell.ui.occurrences" />
   </extension>
   <extension point="org.eclipse.ui.editors.markerAnnotationSpecification">
      <specification
            annotationType="net.sf.eclipsefp.haskell.ui.occurrences"
            label="%haskellOccurrence_label"
            icon="icons/obj16/searchm_obj.gif"
            textPreferenceKey="occurrenceIndication"
            textPreferenceValue="false"
            highlightPreferenceKey="occurrenceHighlighting"
            highlightPreferenceValue="true"
            contributesToHeader="false"
            overviewRulerPreferenceKey="occurrenceIndicationInOverviewRuler"
            overviewRulerPreferenceValue="true"
            verticalRulerPreferenceKey="occurrenceIndicationInVerticalRuler"
            verticalRulerPreferenceValue="false"
            colorPreferenceKey="occurrenceIndicationColor"
            colorPreferenceValue="212,212,212"
            presentationLayer="4"
            showInNextPrevDropdownToolbarActionKey="showOccurrenceInNextPrevDropdownToolbarAction"
            showInNextPrevDropdownToolbarAction="true"
            isGoToNextNavigationTargetKey="isOccurrenceGoToNextNavigationTarget"
            isGoToNextNavigationTarget="false"
            isGoToPreviousNavigationTargetKey="isOccurrenceGoToPreviousNavigationTarget"
            isGoToPreviousNavigationTarget="false">
      </specification>
   </extension>   
      <extension
         point="de.leiffrenzel.cohatoe.server.core.haskellFunctions">
      <haskellFunction
            implementation="net.sf.eclipsefp.haskell.ui.internal.editors.text.MarkOccurrences"
            interface="net.sf.eclipsefp.haskell.ui.internal.editors.text.IMarkOccurrences"
            name="%markOccurrences_name"
            codeFile="$os$/obj/MarkOccurrences.o" />
   </extension>
   
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="net.sf.eclipsefp.haskell.ui.HaskellUIPreferenceInitializer">
      </initializer>
   </extension>

   <!-- some common categories for eclipsefp subprojects to dock on -->
   <extension
         point="org.eclipse.ui.newWizards">
      <category
            name="%newWizardCategory_name"
            id="net.sf.eclipsefp.haskell.ui.newWizardCategory">
      </category>
   </extension>
   <extension
         point="org.eclipse.ui.exportWizards">
      <category
            name="%exportWizardCategory_name"
            id="net.sf.eclipsefp.haskell.ui.exportWizardCategory">
      </category>
   </extension>
   <extension
         point="org.eclipse.ui.cheatsheets.cheatSheetContent">
      <category
            name="Haskell"
            id="net.sf.eclipsefp.haskell.ui.haskellCheatSheets"/>
   </extension>

   
  <!-- Editor context menu: Coding and Refactoring actions-->

  <extension point="org.eclipse.ui.popupMenus">
    <viewerContribution targetID="#HaskellEditorContext"
                        id="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions">
      <menu
            id="refactor"
            label="%ctxMenu_refactor_label"
            path="group.edit">
         <separator name="codingGroup" />
      </menu>
      <action label="%refPF_label"
              class="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions.MakePointFree" 
              menubarPath="refactor/codingGroup"
              id="net.sf.eclipsefp.haskell.ui.internal.refactoring.actions.MakePointFree"/>
    </viewerContribution>
  </extension>
  
  <!-- [Views] Project Explorer -->
  
  <extension point="org.eclipse.ui.navigator.viewer">
    <viewerContentBinding viewerId="org.eclipse.ui.navigator.ProjectExplorer">
      <includes>
        <contentExtension pattern="net.sf.eclipsefp.haskell.ui.haskellContent" />
        <contentExtension pattern="net.sf.eclipsefp.haskell.ui.internal.views.filters.*" />	
      </includes>
    </viewerContentBinding>
  </extension>
  
  <extension point="org.eclipse.ui.navigator.navigatorContent">
    <navigatorContent
      name="%navigatorContent_name"
      icon="$nl$/icons/etool16/hsicon16.gif"
      activeByDefault="true"
      contentProvider="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.HaskellResourceExtensionCP"
      labelProvider="net.sf.eclipsefp.haskell.ui.internal.views.projectexplorer.HaskellResourceExtensionLP"   
      id="net.sf.eclipsefp.haskell.ui.haskellContent"
      priority="high">
      <triggerPoints>
        <or>
          <adapt type="org.eclipse.core.resources.IProject">
            <test property="org.eclipse.core.resources.projectNature" 
                  value="net.sf.eclipsefp.haskell.core.project.HaskellNature"/>
          </adapt>
          <instanceof value="org.eclipse.core.resources.IWorkspaceRoot" /> 
          <instanceof value="org.eclipse.core.resources.IProject" />  
          <instanceof value="org.eclipse.core.resources.IFolder" /> 
        </or>
      </triggerPoints>
      <possibleChildren>
        <or>         
          <instanceof value="org.eclipse.core.resources.IWorkspaceRoot" /> 
          <instanceof value="org.eclipse.core.resources.IProject" /> 
          <instanceof value="org.eclipse.core.resources.IResource" /> 
          <instanceof value="org.eclipse.core.resources.IFolder" />
          <instanceof value="org.eclipse.core.resources.IFile" /> 
        </or>
      </possibleChildren>
    </navigatorContent>
    <commonFilter
        activeByDefault="false"
        class="net.sf.eclipsefp.haskell.ui.internal.views.common.ProjectExecutableFilter"
        name="%projectExecutableFilter_name"
        description="%projectExecutableFilter_desc"
        id="net.sf.eclipsefp.haskell.ui.internal.views.filters.ProjectExecutableFilter"/>
    <commonWizard
		  menuGroupId="net.sf.eclipsefp.haskell.ui"
		  type="new"
		  wizardId="net.sf.eclipsefp.haskell.ui.wizards.NewModuleWizard">
		  <enablement>
		    <or>
		      <adapt type="org.eclipse.core.resources.IFolder" />
		      <adapt type="org.eclipse.core.resources.IProject">
		        <test property="org.eclipse.core.resources.projectNature" 
		              value="net.sf.eclipsefp.haskell.core.project.HaskellNature"/>
		      </adapt>
		    </or>
      </enablement>
    </commonWizard>
  </extension>
  
</plugin>
