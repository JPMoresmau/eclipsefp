# Haskell source code template strings:

CodeTemplates.import.description = Insert a module import
CodeTemplates.gadt.description = Insert a General Algebraic Data Type
CodeTemplates.h98datactor.description = Insert a Haskell98 data type
CodeTemplates.case.description = Insert a case expression
CodeTemplates.do.description = Insert a Monad 'do' block
CodeTemplates.do.text = TODO: Add Monad code here.
CodeTemplates.let.description = Insert a 'let' expression
CodeTemplates.newtype.description = Insert a 'newtype' expression
CodeTemplates.class.description = Insert a 'class' declaration
CodeTemplates.class.text = TODO: Add class function signatures
CodeTemplates.context.description = Add a signature context
CodeTemplates.double_dash.description = Line '--' comment
CodeTemplates.multiline.description = Multiline comment
CodeTemplates.double_dash_haddock_next.description = Insert Haddock documentation for next (following) element
CodeTemplates.double_dash_haddock_prev.description = Insert Haddock documentation for previous element
CodeTemplates.multiline_haddock_next.description = Insert multiline Haddock documentation for next (following) element
CodeTemplates.multiline_haddock_prev.description = Insert multiline Haddock documentation for previous element
CodeTemplates.pragma.description = Pragma comment