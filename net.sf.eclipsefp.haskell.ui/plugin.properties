# bundle manifest
bundleVendor = The EclipseFP Project
bundleName = Haskell Plug-in UI

# extensions
haskellDecorator_name = Haskell Project Folders
haskellDecorator_desc = Decorates source and binary folders in Haskell projects.
problemDecorator_name = Haskell Problems
problemDecorator_desc = Decorates problems in Haskell source files and folders.

haskellPerspective_name = Haskell

buildConsolePP_name = Build
editorPP_name = Editor
editorPP_annotation_name = Annotations
editorPP_syntax_name = Syntax
editorPP_typing_name = Typing
haskellPP_name = Haskell
scionPP_name = Scion and Cabal
implementationsPP_name = Haskell Implementations
#importLibsPP_name = Import Libraries
#projectImportLibsPP_name = Import Libraries
projectLibrariesPP_name=Libraries
searchPP_name=Search Paths

projectWizardPP = New Project
debugPP_name = Debug

fileExposeModulesPP_name= Include/Expose module

# [Editor]
haskellEditor_name = Haskell Editor
cabalEditor_name = Cabal Package Description Editor
templateContext_name = Cabal Package Description Templates

haskellEditorCategory_desc = Haskell editor category
haskellEditorCategory_name = Haskell editor commands
haskellEditorContext_name = Haskell editor context
haskellEditorContext_desc = Context active while the Haskell editor is active
firstCharCommand_desc = Goes to the first non space char or first char of the line depending on the cursor position.
firstCharCommand_name = First char
commentCommand_desc = Comments code line (Adds -- to beginning of the line)
commentCommand_name = Comment
uncommentCommand_desc = Uncomments line (Removes -- from the beggining of the line)
uncommentCommand_name = Uncomment
firstCharAction_label = First Char
optimizeImports_name = Optimize Imports
refPF_label = Pointfree-style notation
refRename_label = Rename

haskellOccurrence_label = Haskell Occurrences
markOccurrences_name = Mark Occurrences
codeFolding_name = Code Folding
haskellOutline_name = Haskell Outline
editorTextHover_name = Text Hover

ctxMenu_source_label = Source
ctxMenu_refactor_label = Refactor

# [Navigation]
openActionSet_label = Open Actions
openActionSet_description = Action set containing open actions
openDefinitionAction_label = &Open Definition
openDefinitionAction_tooltip = Opens an editor on the definition of the selected element
openDefinitionCommand_name = &Open Definition
openDefinitionCommand_desc = Opens an editor on the definition of the selected element

# [Views] common
viewCategory_name = Haskell
projectExecutableFilter_name = Haskell project executables
projectExecutableFilter_desc = Hides the project executable in Haskell projects
haskellElementFilter_name = Haskell language elements
haskellElementFilter_desc = Hides the language elements in Haskell source files

# [Views] particular views
navigatorContent_name = Haskell content

# [Wizards]
newWizardCategory_name = Haskell
exportWizardCategory_name = Haskell
importWizardCategory_name = Haskell

newProjectWizard_name = Haskell Project
newProjectWizard_desc = Create a new Haskell project.
newModuleWizard_name = Haskell Module
newModuleWizard_desc = Create a new Haskell module.

importCabalPackageWizard_name = Cabal Package as Project
importCabalPackageWizard_desc = Import a cabalized package as Haskell project \
into the workspace.

OpenAction.label=&Open
OpenAction.tooltip=Open an Editor on the Selected Element

extPtCabalChange_name = Cabal File Change listener



hsCodeTemplates.context=Haskell source code template context

# Cabal actions
cabalSDistWizard.name=Cabal source export
cabalSDistWizard.description=Export source via Cabal sdist
cabalInstallWizard.name=Cabal install
cabalInstallWizard.description=Install project via Cabal