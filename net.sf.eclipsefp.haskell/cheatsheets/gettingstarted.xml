<?xml version="1.0" encoding="UTF-8" ?> 
<cheatsheet title="Haskell in Eclipse">

<intro 
	href="/org.eclipse.platform.doc.user/reference/ref-cheatsheets.htm">
	<description>
		Welcome to the basic tutorial for Haskell development in Eclipse.
		It will make you familiar with the first steps and the tools in the
		IDE that can be used for Haskell development. We will create a Haskell 
		project, implement the infamous 'Hello World' application and run it.
	</description>
</intro>

<item
	href="/org.eclipse.platform.doc.user/concepts/concepts-4.htm"
	title="Open the Haskell Perspective">
	<action
		pluginId="org.eclipse.ui.cheatsheets"
		class="org.eclipse.ui.internal.cheatsheets.actions.OpenPerspective"
		param1="net.sf.eclipsefp.haskell.ui.HaskellPerspective"/>
	<description>
		Select Window &gt; Open Perspective &gt; Haskell in the menubar at
		the top of the workbench. This step changes the perspective to
		set up the Eclipse workbench for Haskell development. You can
		click the "Click to Perform" button to have the Haskell
		perspective opened automatically.<br/>
		Note that if you've just install the EclipseFP plugins, you may be ask to install executables necessary for EclipseFP from Hackage.<br/>
		Please install these executables unless you've installed the correct versions in a non-standard location, in which case you can use the Haskell preferences pages to indicate where the executables can be found.
	</description>
</item>

<item
	href="/net.sf.eclipsefp.haskell.doc.user/html/haskell/userGuide/wizards.html#newProject"
	title="Create a Haskell project"
	skip="true">
	<action
		pluginId="net.sf.eclipsefp.haskell.ui"
		class="net.sf.eclipsefp.haskell.ui.actions.OpenNewProjectWizard"/>
	<description>
		The first thing you will need is a Haskell Project. (If you already 
		have one in your workspace that you would like to use, you may skip 
		this step with the &quot;Click to Skip&quot; button.) Select File &gt; New &gt; 
		Haskell Project. The 
		&quot;New Haskell Project&quot; wizard is automatically displayed when you 
		click the &quot;Click to Perform&quot; button. Just enter the project name, leaving the "Executable" checkbox selected.
	</description>
</item>

<item
	href="/net.sf.eclipsefp.haskell.doc.user/html/haskell/userGuide/wizards.html#newModule"
	title="Write some code in the Main module"
	skip="true">
	<description>
		Open the src/Main.hs file under your project (it was created for you) and replace "undefined" by some code, for example <b>putStrLn &quot;Hello world!&quot;</b>.
		Once you save the file, it is automatically compiled and linked if your workspace preferences are set to "Build automatically". If not, right click on your project and choose <b>Build Project</b>
		To create a new module, use the File &gt; New &gt; Haskell module action.
	</description>
</item>

<item
	href="/net.sf.eclipsefp.haskell.doc.user/html/haskell/gettingStarted.html#run"
	title="Launch the executable">
	<description>
	    Right-click your project and choose Run As &gt; Haskell Application
	    from the context menu. &apos;Hello world!&apos; should be printed in your 
	    &quot;Console&quot; view.
	</description>
</item>

<item
	href="/net.sf.eclipsefp.haskell.doc.user/html/haskell/userGuide/haddock.html"
	title="Generate documentation (Haddock)">
	<description>
	  If you want to use Haddock to generate documentation from your sources,
	  you can run it from the Haddock Export Wizard. You have to annotate your
	  sources first. See the Help for more details.
	</description>
</item>
	
</cheatsheet>
