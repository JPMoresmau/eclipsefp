EclipseFP Haskell 2.0.3

Release Notes


Scion:

  EclipseFP relies on Scion, the Haskell IDE library, for a lot of its
functionality.  . See http://code.google.com/p/scion-lib/ for more information.

  You cannot use the version from Hackage (0.1.0.2) since commands have been
added for eclipsefp. From version 1.111, eclipsefp includes a modified source
distribution of scion, that is built and used by eclipsefp if the use built-in
server preferences option is checked. Since it is by default, eclipse might be
a bit slow to start the first time scion is built. Otherwise, you can build
Scion from source (git clone git://github.com/JPMoresmau/scion.git, runhaskell
Setup.hs configure/build/install)

Fixes:
  - Scion dependency on AttoJSON fixed to require 0.5.8
  - Where dependent packages are shown (project explorer, project properties)
    the project is correctly loaded if need be
  - When launching GHCi, only hidden packages are added via -package
  - When running a haskell file with the "launch the selected ressource or active editor", if an existing launch configuration exists, it it reused.
  - When an existing launch configuration is found for a ressource, update executable to be the current executable for the delegate
  - Documentation has been updated to not say things that are now totally wrong :-)

Features:
  - Interface to cabal install via contextual action on project

  - Cabal sdist now writes its output to a console, and warns the user if the resulting file already exists

  - Code completion

    - Haskell source code templates

      - Implemented templates include: import, gadt, data, case, do, let,
	newtype, class

    - Better contextual awareness, e.g., only module graph and exposed module
      names are offered if the preceding token is "import".

  - Source menu

    - Source code can now be shifted left/right (not bound to an accelerator
      key). Note that this was always available in the Right Click context
      menu, but for consistency with other UIs, notably Java's, this functionality
      also belonged in the Source menu.

    - Line comment and uncomment ("--") work, bound to Ctrl+7 and Ctrl+Shift+7
      on Windows, Command+/ and Shift+Command+/ on Mac OS.

    - Haddock documentation comments, also in the Right Click context menu:

      - Following ("-- |") via Ctrl+Shift+D F
      - Previous ("-- ^")  via Ctrl+Shift+D P
      - Block following ("{- | ... -}") via Ctrl+Shift+D B
      - Pragma comment ("{-#  #-}") via Ctrl-Shift-C P

  - Run as haskell application: for projects with executable components, launch
    the built exe file.

  - Occurrences shown in current files (based on lexer, so internal functions
    with the same name will be highlighted too)

  - Type name completion after "->" (right arrow)

    - EclipseFP currently assumes that "->" occurs in a type signature, e.g.,
      "foo :: Bool -> String -> ..." Note that this is the common case when
      this completion is requested.

    - There are a lot of other contexts in which "->" can occur, such as witin
      alternatives of a 'case' expression and lambda expressions. Performing the
      incremental or reverse parse is a challenging problem; this is the subject
      of current hacking toward a general solution.

    - Please bear with the developers as this feature evolves.

    - Inserting type variables after a type name is also another feature that
      will appear in a forthcoming release.

  - Set Cabal flags values in Project preferences.

  - Set HTTP_PROXY for Cabal operations to use the proxy defined in Eclipse

Internal:

Upgrade notes:
  
Known issues:
  - Scion compiles with GHC 6.12, but does not currently compile with GHC 6.10
    due to API changes (pm_parsed_source) and package dependencies that currently
    assume 6.12, notably Control.Applicative.


Thanks to B. Scott Michel (bscottm@ieee.org) for his contributions.
Thanks to all bug reporters and users for their feedback.
Thanks to all the people that expressed interest in EclipseFP and want to see it stay alive and improve!

JP Moresmau (jp@moresmau.fr)
