Test plan for EclipseFP
=======================

This plan should be worked through for each milestone release and full release,
with every deliverable. It contains a basic checklist for making sure that all
functionality is in the build and is not severely broken. This is only a smoke
test of course (just run and see if it smokes). It must be supplemented by the
automated unit tests and manual feature tests.

- Verify build completeness

  - Run Eclipse and check that the EclipseFP shows up in the About dialog, 
    with the correct version number.
  - Check that the Haskell perspective and root preference page are there.
  - Create a Haskell project, create a source file with a Hello-World, make 
    sure the program can be run and gives its output.
  - for one-stop builds, make sure that features are in folders (not jars)

- Haddock support

  - Create a project and open the Haddock wizard; the wizard should be in the 
    Haskell category, not under 'Other'.

- Basic functionality

  - create a Haskell project
  - create a module in the source folder
  - check the outline works (shows top-level declarations)
  - check the mark-occurrences function in the editor works 
  - create a Hello-World program and execute the executable
  - check that the Project Explorer shows the GHC installation (Haskell impl)
    as node

- Cohatoe-based functionality

  - try the point-free refactoring
  - check that invalid Cabal files are markered

- Help

  - verify the Help system shows the Haskell entry
  - verify the changelog entry for the tested milestone
  - open the cheatsheet under the Haskell category and work through it

- About

  - the EclipseFP 32x32 icon is there
  - the feature is listed, about information is displayed
  - about information of plugins in the 'Plugin Details' list is correct
