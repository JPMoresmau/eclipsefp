- quick fix on missing package 
	-> install package
	-> event when installing packages
		-> parse package name
		-> clean and rebuild projects that are broken because of this missing package

- open Module page (like open Type in Java)
	search in all cabal files
	but modules can not be referenced
	list all haskell files in source folders-> probably slow, cache in each project?

- format using haskell-src-exts
	- doesn't support comments
- format using scan
	- very limited	

- occurrences + search for Haskell objects in project/workspace
	- refactor -> rename renames all occurrences

- achievements!

- "visual programming"
	- define expressions
	- the expressions get revaluated every time the file is changed
	- expressions could be assigned with "viewers"
		-> show images, play sound, etc

- clean up preferences
	- no option for GHC/GHCi: we need to know what options to ignore for GHCi, since these options are going to appear in the Cabal file
	- GHC options on each project as well

- GHC 6.12 -dynamic option (http://mostlycode.wordpress.com/2010/01/26/ghc-6-12-1-dynamic-executables-fun/)

- code manipulation: should be pluggable into scion without recompiling???
	- broken refactorings (point free, etc...)

- files not haskell in source folders could go into data-files automatically




- run Ghci with proper flags done partially
	- ask which cabal component to take
	- what about conditional in cabal (like scion: if ghc impl...)
	- remove inproper options
	- ignore .ghci file option? (http://www.haskell.org/ghc/docs/latest/html/users_guide/ghci-dot-files.html -ignore-dot-ghci)

.ghci file parsing/editor?? (http://www.haskell.org/ghc/docs/latest/html/users_guide/ghci-dot-files.html http://neilmitchell.blogspot.com/2010/01/using-ghci-files-to-run-projects.html http://neilmitchell.blogspot.com/2010/01/better-ghci-files.html)

- integrate analysis tools like hpc, HaskaBelle
- integrate runtime tools like criterion
- integrate HaRe for refactoring?

- debugging 
	- column on breakpoint??
	- try to use :hist to display full stack (can we intercept write to add :trace in front?)
	- better system to force evaluation? Done with custom value setter calling :force what about calling seq ... ()?
	- reloading modules when stopped seems to cause breakpoints to disappear in GHCi, to check

- add Haskell nature + related files to existing project

- import management (order import, only import what's needed, add proper import for function?)

- project rename
- module rename (rename file + module name + imports ) (in cabal already done)

- CAPRI http://www.haskell.org/haskellwiki/Capri to install scion
	- built-in -> install global/local/project