<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>

   <extension-point id="haskellCompilers" name="%extPtCompilers_name" schema="schema/haskellCompilers.exsd"/>
   <extension-point id="haskellParsers" name="%extPtParsers_name" schema="schema/haskellParsers.exsd"/>

   <extension
         id="project.HaskellNature"
         name="%haskellNature_name"
         point="org.eclipse.core.resources.natures">
      <runtime>
         <run
               class="net.sf.eclipsefp.haskell.core.project.HaskellNature">
         </run>
      </runtime>
   </extension>
   <extension
         id="builder.HaskellBuilder"
         name="%haskellBuilder_name"
         point="org.eclipse.core.resources.builders">
      <builder>
         <run
               class="net.sf.eclipsefp.haskell.core.builder.HaskellBuilder">
         </run>
      </builder>
   </extension>
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="net.sf.eclipsefp.haskell.core.preferences.CorePreferenceInitializer">
      </initializer>
   </extension>
   <extension
         point="org.eclipse.debug.core.launchConfigurationTypes">
      <launchConfigurationType
            name="%haskellApplicationLaunchType_name"
            delegate="net.sf.eclipsefp.haskell.core.launch.HaskellLaunchDelegate"
            modes="run"
            id="net.sf.eclipsefp.haskell.core.launch.HaskellLaunchDelegate">
      </launchConfigurationType>
   </extension>
   <extension
         point="org.eclipse.team.core.fileTypes">
      <fileTypes
            type="text"
            extension="hs">
      </fileTypes>
      <fileTypes
            type="text"
            extension="lhs">
      </fileTypes>
   </extension>
   <extension
         point="org.eclipse.core.expressions.propertyTesters">
      <propertyTester
            properties="isProjectExecutable, isSourceFolder, isHaskellFile"
            namespace="net.sf.eclipsefp.haskell.core"
            type="org.eclipse.core.resources.IResource"
            class="net.sf.eclipsefp.haskell.core.expressions.HaskellPropertyTester"
            id="net.sf.eclipsefp.haskell.core.expressions.HaskellPropertyTester">
      </propertyTester>
   </extension>
   <extension
         id="problem"
         name="%haskellProblem_name"
         point="org.eclipse.core.resources.markers">
      <persistent value="true"/>
      <super type="org.eclipse.core.resources.problemmarker"/>
      <super type="org.eclipse.core.resources.textmarker"/>
   </extension>

   <!-- Refactoring support -->
   
   <extension
        point="de.leiffrenzel.cohatoe.server.core.haskellFunctions">
     <haskellFunction
           implementation="net.sf.eclipsefp.haskell.core.internal.refactoring.functions.MakePointFree"
           interface="net.sf.eclipsefp.haskell.core.internal.refactoring.functions.IMakePointFree"
           name="%pfRefactoring_name"
           codeFile="$os$/obj/MakePointFree.o">
     </haskellFunction>
  </extension>
</plugin>
