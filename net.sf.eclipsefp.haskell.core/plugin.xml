<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>

   <extension-point id="haskellCompilers" name="%extPtCompilers_name" schema="schema/haskellCompilers.exsd"/>
   <extension-point id="haskellParsers" name="%extPtParsers_name" schema="schema/haskellParsers.exsd"/>
   <extension-point id="cabalContributors" name="%extPtCabal_name" schema="schema/cabalContributors.exsd"/>

   <extension
         id="project.HaskellNature"
         name="%haskellNature_name"
         point="org.eclipse.core.resources.natures">
      <runtime>
         <run
               class="net.sf.eclipsefp.haskell.core.project.HaskellNature">
         </run>
      </runtime>
      <builder id="net.sf.eclipsefp.haskell.core.builder.HaskellBuilder"/>
      <builder id="net.sf.eclipsefp.haskell.core.hlint.HLintBuilder"/>  
   </extension>
   <extension
         id="builder.HaskellBuilder"
         name="%haskellBuilder_name"
         point="org.eclipse.core.resources.builders">
      <builder hasNature="true">
         <run
               class="net.sf.eclipsefp.haskell.core.builder.HaskellBuilder">
         </run>
      </builder>
   </extension>
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="net.sf.eclipsefp.haskell.core.preferences.CorePreferenceInitializer">
      </initializer>
   </extension>
   
   <!-- content types and file types -->
   <extension point="org.eclipse.team.core.fileTypes">
     <fileTypes type="text" extension="hs" />
     <fileTypes type="text" extension="lhs" />
   </extension>
   <extension point="org.eclipse.core.contenttype.contentTypes">
     <content-type base-type="org.eclipse.core.runtime.text"
                   file-extensions="hs"
                   id="net.sf.eclipsefp.haskell.contenttypes.haskell"
                   name="%contenttype_haskell_name"
                   priority="normal" />
     <content-type base-type="org.eclipse.core.runtime.text"
                   file-extensions="lhs"
                   id="net.sf.eclipsefp.haskell.contenttypes.literateHaskell"
                   name="%contenttype_literate_name"
                   priority="normal">
       <describer class="net.sf.eclipsefp.haskell.core.internal.contenttypes.LiterateContentDescriber" />
     </content-type>
   </extension>

   <extension
         point="org.eclipse.core.expressions.propertyTesters">
      <propertyTester
            properties="isProjectExecutable, isSourceFolder, isHaskellFile, isProjectTestSuite"
            namespace="net.sf.eclipsefp.haskell.core"
            type="org.eclipse.core.resources.IResource"
            class="net.sf.eclipsefp.haskell.core.expressions.HaskellPropertyTester"
            id="net.sf.eclipsefp.haskell.core.expressions.HaskellPropertyTester">
      </propertyTester>
   </extension>
   <extension
         id="problem"
         name="%haskellProblem_name"
         point="org.eclipse.core.resources.markers">
      <persistent value="true"/>
      <super type="org.eclipse.core.resources.problemmarker"/>
      <super type="org.eclipse.core.resources.textmarker"/>
   </extension>
   <extension
         id="projectProblem"
         name="%haskellProjectProblem_name"
         point="org.eclipse.core.resources.markers">
      <persistent value="true"/>
      <super type="net.sf.eclipsefp.haskell.core.problem"/>
   </extension>
   <extension
         id="hlint.HLintBuilder"
         name="%hlintBuilder_name"
         point="org.eclipse.core.resources.builders">
      <builder hasNature="true">
         <run
               class="net.sf.eclipsefp.haskell.core.hlint.HLintBuilder">
         </run>
      </builder>
   </extension>
   <extension
         id="hlint"
         name="%hlintProblem_name"
         point="org.eclipse.core.resources.markers">
      <persistent
            value="true">
      </persistent>
      <super
            type="org.eclipse.core.resources.problemmarker">
      </super>
      <super
            type="org.eclipse.core.resources.textmarker">
      </super>
   </extension>
   <extension
         id="scionProblem"
         name="%scionProblem_name"
         point="org.eclipse.core.resources.markers">
      <persistent
            value="true">
      </persistent>
      <super
            type="net.sf.eclipsefp.haskell.core.problem">
      </super>
   </extension>
</plugin>
